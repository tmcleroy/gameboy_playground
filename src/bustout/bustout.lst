                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Sun Sep  8 00:15:44 2019
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module lcc156520
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _main
                             12 	.globl _run
                             13 	.globl _score
                             14 	.globl _move
                             15 	.globl _collide
                             16 	.globl _physics
                             17 	.globl _input
                             18 	.globl _set_blocks
                             19 	.globl _set_lives
                             20 	.globl _set_ball
                             21 	.globl _set_paddle
                             22 	.globl _blocks
                             23 	.globl _ball_vel_y
                             24 	.globl _ball_vel_x
                             25 	.globl _ball_y
                             26 	.globl _ball_x
                             27 	.globl _paddle_vel_y
                             28 	.globl _paddle_vel_x
                             29 	.globl _paddle_y
                             30 	.globl _paddle_x
                             31 	.globl _game_over
                             32 	.globl _game_started
                             33 	.globl _lives
                             34 	.globl _key
                             35 	.globl _SPRITE_SIZE
                             36 	.globl _SCREEN_HEIGHT
                             37 	.globl _SCREEN_WIDTH
                             38 	.globl _lives_sprite_begin
                             39 	.globl _ball_sprite_right
                             40 	.globl _ball_sprite_left
                             41 	.globl _paddle_speed
                             42 	.globl _paddle_sprite_right
                             43 	.globl _paddle_sprite_left
                             44 	.globl _INITIAL_LIVES
                             45 	.globl _block_sprite_data
                             46 	.globl _death_sprite_data
                             47 	.globl _smile_sprite_data
                             48 	.globl _ball_sprite_data
                             49 	.globl _paddle_sprite_data
                             50 ;--------------------------------------------------------
                             51 ; special function registers
                             52 ;--------------------------------------------------------
                             53 ;--------------------------------------------------------
                             54 ; special function bits 
                             55 ;--------------------------------------------------------
                             56 ;--------------------------------------------------------
                             57 ; internal ram data
                             58 ;--------------------------------------------------------
                             59 	.area _DATA
   0000                      60 _SCREEN_WIDTH::
   0000                      61 	.ds 2
   0002                      62 _SCREEN_HEIGHT::
   0002                      63 	.ds 2
   0004                      64 _SPRITE_SIZE::
   0004                      65 	.ds 2
   0006                      66 _key::
   0006                      67 	.ds 1
   0007                      68 _lives::
   0007                      69 	.ds 2
   0009                      70 _game_started::
   0009                      71 	.ds 2
   000B                      72 _game_over::
   000B                      73 	.ds 2
   000D                      74 _paddle_x::
   000D                      75 	.ds 1
   000E                      76 _paddle_y::
   000E                      77 	.ds 1
   000F                      78 _paddle_vel_x::
   000F                      79 	.ds 1
   0010                      80 _paddle_vel_y::
   0010                      81 	.ds 1
   0011                      82 _ball_x::
   0011                      83 	.ds 1
   0012                      84 _ball_y::
   0012                      85 	.ds 1
   0013                      86 _ball_vel_x::
   0013                      87 	.ds 1
   0014                      88 _ball_vel_y::
   0014                      89 	.ds 1
   0015                      90 _blocks::
   0015                      91 	.ds 48
                             92 ;--------------------------------------------------------
                             93 ; overlayable items in internal ram 
                             94 ;--------------------------------------------------------
                             95 	.area _OVERLAY
                             96 ;--------------------------------------------------------
                             97 ; indirectly addressable internal ram data
                             98 ;--------------------------------------------------------
                             99 	.area _ISEG
                            100 ;--------------------------------------------------------
                            101 ; bit data
                            102 ;--------------------------------------------------------
                            103 	.area _BSEG
                            104 ;--------------------------------------------------------
                            105 ; external ram data
                            106 ;--------------------------------------------------------
                            107 	.area _XSEG
                            108 ;--------------------------------------------------------
                            109 ; global & static initialisations
                            110 ;--------------------------------------------------------
                            111 	.area _GSINIT
                            112 	.area _GSFINAL
                            113 	.area _GSINIT
                            114 ;	bustout.c 65
                            115 ;	genAssign
                            116 ;	AOP_HL for _SCREEN_WIDTH
   0000 21 00 00            117 	ld	hl,#_SCREEN_WIDTH
   0003 36 A0               118 	ld	(hl),#0xA0
   0005 23                  119 	inc	hl
   0006 36 00               120 	ld	(hl),#0x00
                            121 ;	bustout.c 66
                            122 ;	genAssign
                            123 ;	AOP_HL for _SCREEN_HEIGHT
   0008 21 02 00            124 	ld	hl,#_SCREEN_HEIGHT
   000B 36 90               125 	ld	(hl),#0x90
   000D 23                  126 	inc	hl
   000E 36 00               127 	ld	(hl),#0x00
                            128 ;	bustout.c 67
                            129 ;	genAssign
                            130 ;	AOP_HL for _SPRITE_SIZE
   0010 21 04 00            131 	ld	hl,#_SPRITE_SIZE
   0013 36 10               132 	ld	(hl),#0x10
   0015 23                  133 	inc	hl
   0016 36 00               134 	ld	(hl),#0x00
                            135 ;	bustout.c 71
                            136 ;	genAssign
                            137 ;	AOP_HL for _INITIAL_LIVES
                            138 ;	AOP_HL for _lives
   0018 21 CC 01            139 	ld	hl,#_INITIAL_LIVES
   001B 2A                  140 	ld	a,(hl+)
   001C 5E                  141 	ld	e,(hl)
   001D 21 07 00            142 	ld	hl,#_lives
   0020 22                  143 	ld	(hl+),a
   0021 73                  144 	ld	(hl),e
                            145 ;	bustout.c 72
                            146 ;	genAssign
                            147 ;	AOP_HL for _game_started
   0022 21 09 00            148 	ld	hl,#_game_started
   0025 36 00               149 	ld	(hl),#0x00
   0027 23                  150 	inc	hl
   0028 36 00               151 	ld	(hl),#0x00
                            152 ;	bustout.c 73
                            153 ;	genAssign
                            154 ;	AOP_HL for _game_over
   002A 21 0B 00            155 	ld	hl,#_game_over
   002D 36 00               156 	ld	(hl),#0x00
   002F 23                  157 	inc	hl
   0030 36 00               158 	ld	(hl),#0x00
                            159 ;--------------------------------------------------------
                            160 ; Home
                            161 ;--------------------------------------------------------
                            162 	.area _HOME
                            163 	.area _CODE
                            164 ;--------------------------------------------------------
                            165 ; code
                            166 ;--------------------------------------------------------
                            167 	.area _CODE
                            168 ;	bustout.c 92
                            169 ;	genLabel
                            170 ;	genFunction
                            171 ;	---------------------------------
                            172 ; Function set_paddle
                            173 ; ---------------------------------
   0000                     174 ___set_paddle_start:
   0000                     175 _set_paddle:
   0000 E8 FE               176 	lda	sp,-2(sp)
                            177 ;	bustout.c 94
                            178 ;	genRightShift
                            179 ;	AOP_HL for _SCREEN_WIDTH
   0002 21 00 00            180 	ld	hl,#_SCREEN_WIDTH
   0005 4E                  181 	ld	c,(hl)
   0006 23                  182 	inc	hl
   0007 46                  183 	ld	b,(hl)
   0008 CB 28               184 	sra	b
   000A CB 19               185 	rr	c
                            186 ;	genCast
                            187 ;	AOP_HL for _paddle_x
   000C 21 0D 00            188 	ld	hl,#_paddle_x
   000F 71                  189 	ld	(hl),c
                            190 ;	bustout.c 95
                            191 ;	genMinus
                            192 ;	AOP_HL for _SCREEN_HEIGHT
   0010 21 02 00            193 	ld	hl,#_SCREEN_HEIGHT
   0013 4E                  194 	ld	c,(hl)
   0014 23                  195 	inc	hl
   0015 46                  196 	ld	b,(hl)
   0016 0B                  197 	dec	bc
                            198 ;	genCast
                            199 ;	AOP_HL for _paddle_y
   0017 21 0E 00            200 	ld	hl,#_paddle_y
   001A 71                  201 	ld	(hl),c
                            202 ;	bustout.c 97
                            203 ;	genIpush
                            204 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   001B 21 8C 00            205 	ld	hl,#_paddle_sprite_data
   001E E5                  206 	push	hl
                            207 ;	genIpush
   001F 21 00 08            208 	ld	hl,#0x0800
   0022 E5                  209 	push	hl
                            210 ;	genCall
   0023 CD 00 00            211 	call	_set_sprite_data
   0026 E8 04               212 	lda	sp,4(sp)
                            213 ;	bustout.c 98
                            214 ;	genAssign
                            215 ;	AOP_HL for _paddle_sprite_left
   0028 21 CE 01            216 	ld	hl,#_paddle_sprite_left
   002B 4E                  217 	ld	c,(hl)
   002C 23                  218 	inc	hl
   002D 46                  219 	ld	b,(hl)
                            220 ;	genCast
                            221 ; Removed redundent load
                            222 ;	genIpush
                            223 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   002E 3E 00               224 	ld	a,#0x00
   0030 F5                  225 	push	af
   0031 33                  226 	inc	sp
                            227 ;	genIpush
   0032 79                  228 	ld	a,c
   0033 F5                  229 	push	af
   0034 33                  230 	inc	sp
                            231 ;	genCall
   0035 CD 00 00            232 	call	_set_sprite_tile
   0038 E8 02               233 	lda	sp,2(sp)
                            234 ;	bustout.c 99
                            235 ;	genAssign
                            236 ;	AOP_HL for _paddle_sprite_right
   003A 21 D0 01            237 	ld	hl,#_paddle_sprite_right
   003D 4E                  238 	ld	c,(hl)
   003E 23                  239 	inc	hl
   003F 46                  240 	ld	b,(hl)
                            241 ;	genCast
                            242 ; Removed redundent load
                            243 ;	genIpush
                            244 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0040 3E 02               245 	ld	a,#0x02
   0042 F5                  246 	push	af
   0043 33                  247 	inc	sp
                            248 ;	genIpush
   0044 79                  249 	ld	a,c
   0045 F5                  250 	push	af
   0046 33                  251 	inc	sp
                            252 ;	genCall
   0047 CD 00 00            253 	call	_set_sprite_tile
   004A E8 02               254 	lda	sp,2(sp)
                            255 ;	bustout.c 100
                            256 ;	genAssign
                            257 ;	AOP_HL for _paddle_sprite_left
   004C 21 CE 01            258 	ld	hl,#_paddle_sprite_left
   004F 4E                  259 	ld	c,(hl)
   0050 23                  260 	inc	hl
   0051 46                  261 	ld	b,(hl)
                            262 ;	genCast
                            263 ; Removed redundent load
                            264 ;	genIpush
                            265 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            266 ;	AOP_HL for _paddle_y
   0052 21 0E 00            267 	ld	hl,#_paddle_y
   0055 7E                  268 	ld	a,(hl)
   0056 F5                  269 	push	af
   0057 33                  270 	inc	sp
                            271 ;	genIpush
                            272 ;	AOP_HL for _paddle_x
   0058 21 0D 00            273 	ld	hl,#_paddle_x
   005B 7E                  274 	ld	a,(hl)
   005C F5                  275 	push	af
   005D 33                  276 	inc	sp
                            277 ;	genIpush
   005E 79                  278 	ld	a,c
   005F F5                  279 	push	af
   0060 33                  280 	inc	sp
                            281 ;	genCall
   0061 CD 00 00            282 	call	_move_sprite
   0064 E8 03               283 	lda	sp,3(sp)
                            284 ;	bustout.c 101
                            285 ;	genPlus
                            286 ;	AOP_HL for _paddle_x
                            287 ;	genPlusIncr
                            288 ;	Can't optimise plus by inc, falling back to the normal way
   0066 21 0D 00            289 	ld	hl,#_paddle_x
   0069 7E                  290 	ld	a,(hl)
   006A C6 08               291 	add	a,#0x08
   006C 4F                  292 	ld	c,a
                            293 ;	genAssign
                            294 ;	AOP_HL for _paddle_sprite_right
                            295 ;	AOP_STK for _set_paddle_sloc0_1_0
   006D 21 D0 01            296 	ld	hl,#_paddle_sprite_right
   0070 2A                  297 	ld	a,(hl+)
   0071 5E                  298 	ld	e,(hl)
   0072 F8 00               299 	lda	hl,0(sp)
   0074 22                  300 	ld	(hl+),a
   0075 73                  301 	ld	(hl),e
                            302 ;	genCast
                            303 ;	AOP_STK for _set_paddle_sloc0_1_0
   0076 2B                  304 	dec	hl
   0077 46                  305 	ld	b,(hl)
                            306 ;	genIpush
                            307 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            308 ;	AOP_HL for _paddle_y
   0078 21 0E 00            309 	ld	hl,#_paddle_y
   007B 7E                  310 	ld	a,(hl)
   007C F5                  311 	push	af
   007D 33                  312 	inc	sp
                            313 ;	genIpush
   007E 79                  314 	ld	a,c
   007F F5                  315 	push	af
   0080 33                  316 	inc	sp
                            317 ;	genIpush
   0081 78                  318 	ld	a,b
   0082 F5                  319 	push	af
   0083 33                  320 	inc	sp
                            321 ;	genCall
   0084 CD 00 00            322 	call	_move_sprite
   0087 E8 03               323 	lda	sp,3(sp)
                            324 ;	genLabel
   0089                     325 00101$:
                            326 ;	genEndFunction
   0089 E8 02               327 	lda	sp,2(sp)
   008B C9                  328 	ret
   008C                     329 ___set_paddle_end:
   008C                     330 _paddle_sprite_data:
   008C 00                  331 	.db #0x00
   008D 00                  332 	.db #0x00
   008E 00                  333 	.db #0x00
   008F 00                  334 	.db #0x00
   0090 00                  335 	.db #0x00
   0091 00                  336 	.db #0x00
   0092 00                  337 	.db #0x00
   0093 00                  338 	.db #0x00
   0094 00                  339 	.db #0x00
   0095 00                  340 	.db #0x00
   0096 00                  341 	.db #0x00
   0097 00                  342 	.db #0x00
   0098 00                  343 	.db #0x00
   0099 00                  344 	.db #0x00
   009A 00                  345 	.db #0x00
   009B 00                  346 	.db #0x00
   009C 00                  347 	.db #0x00
   009D 00                  348 	.db #0x00
   009E 00                  349 	.db #0x00
   009F 00                  350 	.db #0x00
   00A0 00                  351 	.db #0x00
   00A1 00                  352 	.db #0x00
   00A2 00                  353 	.db #0x00
   00A3 00                  354 	.db #0x00
   00A4 FF                  355 	.db #0xFF
   00A5 FF                  356 	.db #0xFF
   00A6 FF                  357 	.db #0xFF
   00A7 FF                  358 	.db #0xFF
   00A8 7F                  359 	.db #0x7F
   00A9 7F                  360 	.db #0x7F
   00AA 3F                  361 	.db #0x3F
   00AB 3F                  362 	.db #0x3F
   00AC 00                  363 	.db #0x00
   00AD 00                  364 	.db #0x00
   00AE 00                  365 	.db #0x00
   00AF 00                  366 	.db #0x00
   00B0 00                  367 	.db #0x00
   00B1 00                  368 	.db #0x00
   00B2 00                  369 	.db #0x00
   00B3 00                  370 	.db #0x00
   00B4 00                  371 	.db #0x00
   00B5 00                  372 	.db #0x00
   00B6 00                  373 	.db #0x00
   00B7 00                  374 	.db #0x00
   00B8 00                  375 	.db #0x00
   00B9 00                  376 	.db #0x00
   00BA 00                  377 	.db #0x00
   00BB 00                  378 	.db #0x00
   00BC 00                  379 	.db #0x00
   00BD 00                  380 	.db #0x00
   00BE 00                  381 	.db #0x00
   00BF 00                  382 	.db #0x00
   00C0 00                  383 	.db #0x00
   00C1 00                  384 	.db #0x00
   00C2 00                  385 	.db #0x00
   00C3 00                  386 	.db #0x00
   00C4 FF                  387 	.db #0xFF
   00C5 FF                  388 	.db #0xFF
   00C6 FF                  389 	.db #0xFF
   00C7 FF                  390 	.db #0xFF
   00C8 FE                  391 	.db #0xFE
   00C9 FE                  392 	.db #0xFE
   00CA FC                  393 	.db #0xFC
   00CB FC                  394 	.db #0xFC
   00CC                     395 _ball_sprite_data:
   00CC 07                  396 	.db #0x07
   00CD 07                  397 	.db #0x07
   00CE 1F                  398 	.db #0x1F
   00CF 1F                  399 	.db #0x1F
   00D0 3F                  400 	.db #0x3F
   00D1 3F                  401 	.db #0x3F
   00D2 7F                  402 	.db #0x7F
   00D3 7F                  403 	.db #0x7F
   00D4 7F                  404 	.db #0x7F
   00D5 7F                  405 	.db #0x7F
   00D6 FF                  406 	.db #0xFF
   00D7 FF                  407 	.db #0xFF
   00D8 FF                  408 	.db #0xFF
   00D9 FF                  409 	.db #0xFF
   00DA FF                  410 	.db #0xFF
   00DB FF                  411 	.db #0xFF
   00DC FF                  412 	.db #0xFF
   00DD FF                  413 	.db #0xFF
   00DE FF                  414 	.db #0xFF
   00DF FF                  415 	.db #0xFF
   00E0 FF                  416 	.db #0xFF
   00E1 FF                  417 	.db #0xFF
   00E2 7F                  418 	.db #0x7F
   00E3 7F                  419 	.db #0x7F
   00E4 7F                  420 	.db #0x7F
   00E5 7F                  421 	.db #0x7F
   00E6 3F                  422 	.db #0x3F
   00E7 3F                  423 	.db #0x3F
   00E8 1F                  424 	.db #0x1F
   00E9 1F                  425 	.db #0x1F
   00EA 07                  426 	.db #0x07
   00EB 07                  427 	.db #0x07
   00EC E0                  428 	.db #0xE0
   00ED E0                  429 	.db #0xE0
   00EE F8                  430 	.db #0xF8
   00EF F8                  431 	.db #0xF8
   00F0 FC                  432 	.db #0xFC
   00F1 FC                  433 	.db #0xFC
   00F2 FE                  434 	.db #0xFE
   00F3 FE                  435 	.db #0xFE
   00F4 FE                  436 	.db #0xFE
   00F5 FE                  437 	.db #0xFE
   00F6 FF                  438 	.db #0xFF
   00F7 FF                  439 	.db #0xFF
   00F8 FF                  440 	.db #0xFF
   00F9 FF                  441 	.db #0xFF
   00FA FF                  442 	.db #0xFF
   00FB FF                  443 	.db #0xFF
   00FC FF                  444 	.db #0xFF
   00FD FF                  445 	.db #0xFF
   00FE FF                  446 	.db #0xFF
   00FF FF                  447 	.db #0xFF
   0100 FF                  448 	.db #0xFF
   0101 FF                  449 	.db #0xFF
   0102 FE                  450 	.db #0xFE
   0103 FE                  451 	.db #0xFE
   0104 FE                  452 	.db #0xFE
   0105 FE                  453 	.db #0xFE
   0106 FC                  454 	.db #0xFC
   0107 FC                  455 	.db #0xFC
   0108 F8                  456 	.db #0xF8
   0109 F8                  457 	.db #0xF8
   010A E0                  458 	.db #0xE0
   010B E0                  459 	.db #0xE0
   010C                     460 _smile_sprite_data:
   010C 07                  461 	.db #0x07
   010D 07                  462 	.db #0x07
   010E 1F                  463 	.db #0x1F
   010F 1F                  464 	.db #0x1F
   0110 3F                  465 	.db #0x3F
   0111 3F                  466 	.db #0x3F
   0112 7F                  467 	.db #0x7F
   0113 7B                  468 	.db #0x7B
   0114 7F                  469 	.db #0x7F
   0115 73                  470 	.db #0x73
   0116 FF                  471 	.db #0xFF
   0117 F3                  472 	.db #0xF3
   0118 F3                  473 	.db #0xF3
   0119 FF                  474 	.db #0xFF
   011A F3                  475 	.db #0xF3
   011B FF                  476 	.db #0xFF
   011C FF                  477 	.db #0xFF
   011D FF                  478 	.db #0xFF
   011E FF                  479 	.db #0xFF
   011F FF                  480 	.db #0xFF
   0120 FF                  481 	.db #0xFF
   0121 E0                  482 	.db #0xE0
   0122 7F                  483 	.db #0x7F
   0123 60                  484 	.db #0x60
   0124 7F                  485 	.db #0x7F
   0125 70                  486 	.db #0x70
   0126 3F                  487 	.db #0x3F
   0127 3C                  488 	.db #0x3C
   0128 1F                  489 	.db #0x1F
   0129 1F                  490 	.db #0x1F
   012A 07                  491 	.db #0x07
   012B 07                  492 	.db #0x07
   012C E0                  493 	.db #0xE0
   012D E0                  494 	.db #0xE0
   012E F8                  495 	.db #0xF8
   012F F8                  496 	.db #0xF8
   0130 FC                  497 	.db #0xFC
   0131 FC                  498 	.db #0xFC
   0132 FE                  499 	.db #0xFE
   0133 DE                  500 	.db #0xDE
   0134 FE                  501 	.db #0xFE
   0135 CE                  502 	.db #0xCE
   0136 FF                  503 	.db #0xFF
   0137 CF                  504 	.db #0xCF
   0138 CF                  505 	.db #0xCF
   0139 FF                  506 	.db #0xFF
   013A CF                  507 	.db #0xCF
   013B FF                  508 	.db #0xFF
   013C FF                  509 	.db #0xFF
   013D FF                  510 	.db #0xFF
   013E FF                  511 	.db #0xFF
   013F FF                  512 	.db #0xFF
   0140 FF                  513 	.db #0xFF
   0141 07                  514 	.db #0x07
   0142 FE                  515 	.db #0xFE
   0143 06                  516 	.db #0x06
   0144 FE                  517 	.db #0xFE
   0145 0E                  518 	.db #0x0E
   0146 FC                  519 	.db #0xFC
   0147 3C                  520 	.db #0x3C
   0148 F8                  521 	.db #0xF8
   0149 F8                  522 	.db #0xF8
   014A E0                  523 	.db #0xE0
   014B E0                  524 	.db #0xE0
   014C                     525 _death_sprite_data:
   014C 07                  526 	.db #0x07
   014D 07                  527 	.db #0x07
   014E 1F                  528 	.db #0x1F
   014F 1F                  529 	.db #0x1F
   0150 0F                  530 	.db #0x0F
   0151 0F                  531 	.db #0x0F
   0152 67                  532 	.db #0x67
   0153 67                  533 	.db #0x67
   0154 73                  534 	.db #0x73
   0155 73                  535 	.db #0x73
   0156 F9                  536 	.db #0xF9
   0157 F9                  537 	.db #0xF9
   0158 FC                  538 	.db #0xFC
   0159 FC                  539 	.db #0xFC
   015A FE                  540 	.db #0xFE
   015B FE                  541 	.db #0xFE
   015C FC                  542 	.db #0xFC
   015D FC                  543 	.db #0xFC
   015E F9                  544 	.db #0xF9
   015F F9                  545 	.db #0xF9
   0160 F3                  546 	.db #0xF3
   0161 F3                  547 	.db #0xF3
   0162 67                  548 	.db #0x67
   0163 67                  549 	.db #0x67
   0164 4F                  550 	.db #0x4F
   0165 4F                  551 	.db #0x4F
   0166 1F                  552 	.db #0x1F
   0167 1F                  553 	.db #0x1F
   0168 1F                  554 	.db #0x1F
   0169 1F                  555 	.db #0x1F
   016A 07                  556 	.db #0x07
   016B 07                  557 	.db #0x07
   016C E0                  558 	.db #0xE0
   016D E0                  559 	.db #0xE0
   016E F8                  560 	.db #0xF8
   016F F8                  561 	.db #0xF8
   0170 F0                  562 	.db #0xF0
   0171 F0                  563 	.db #0xF0
   0172 E6                  564 	.db #0xE6
   0173 E6                  565 	.db #0xE6
   0174 CE                  566 	.db #0xCE
   0175 CE                  567 	.db #0xCE
   0176 9F                  568 	.db #0x9F
   0177 9F                  569 	.db #0x9F
   0178 3F                  570 	.db #0x3F
   0179 3F                  571 	.db #0x3F
   017A 7F                  572 	.db #0x7F
   017B 7F                  573 	.db #0x7F
   017C 3F                  574 	.db #0x3F
   017D 3F                  575 	.db #0x3F
   017E 9F                  576 	.db #0x9F
   017F 9F                  577 	.db #0x9F
   0180 CF                  578 	.db #0xCF
   0181 CF                  579 	.db #0xCF
   0182 E6                  580 	.db #0xE6
   0183 E6                  581 	.db #0xE6
   0184 F2                  582 	.db #0xF2
   0185 F2                  583 	.db #0xF2
   0186 F8                  584 	.db #0xF8
   0187 F8                  585 	.db #0xF8
   0188 F8                  586 	.db #0xF8
   0189 F8                  587 	.db #0xF8
   018A E0                  588 	.db #0xE0
   018B E0                  589 	.db #0xE0
   018C                     590 _block_sprite_data:
   018C FF                  591 	.db #0xFF
   018D FF                  592 	.db #0xFF
   018E FF                  593 	.db #0xFF
   018F 80                  594 	.db #0x80
   0190 FF                  595 	.db #0xFF
   0191 BF                  596 	.db #0xBF
   0192 FF                  597 	.db #0xFF
   0193 A0                  598 	.db #0xA0
   0194 FF                  599 	.db #0xFF
   0195 AF                  600 	.db #0xAF
   0196 FF                  601 	.db #0xFF
   0197 A8                  602 	.db #0xA8
   0198 FF                  603 	.db #0xFF
   0199 AB                  604 	.db #0xAB
   019A FF                  605 	.db #0xFF
   019B AA                  606 	.db #0xAA
   019C FF                  607 	.db #0xFF
   019D AA                  608 	.db #0xAA
   019E FF                  609 	.db #0xFF
   019F AB                  610 	.db #0xAB
   01A0 FF                  611 	.db #0xFF
   01A1 A8                  612 	.db #0xA8
   01A2 FF                  613 	.db #0xFF
   01A3 AF                  614 	.db #0xAF
   01A4 FF                  615 	.db #0xFF
   01A5 A0                  616 	.db #0xA0
   01A6 FF                  617 	.db #0xFF
   01A7 BF                  618 	.db #0xBF
   01A8 FF                  619 	.db #0xFF
   01A9 80                  620 	.db #0x80
   01AA FF                  621 	.db #0xFF
   01AB FF                  622 	.db #0xFF
   01AC FF                  623 	.db #0xFF
   01AD FF                  624 	.db #0xFF
   01AE FF                  625 	.db #0xFF
   01AF 01                  626 	.db #0x01
   01B0 FF                  627 	.db #0xFF
   01B1 FD                  628 	.db #0xFD
   01B2 FF                  629 	.db #0xFF
   01B3 05                  630 	.db #0x05
   01B4 FF                  631 	.db #0xFF
   01B5 F5                  632 	.db #0xF5
   01B6 FF                  633 	.db #0xFF
   01B7 15                  634 	.db #0x15
   01B8 FF                  635 	.db #0xFF
   01B9 D5                  636 	.db #0xD5
   01BA FF                  637 	.db #0xFF
   01BB 55                  638 	.db #0x55
   01BC FF                  639 	.db #0xFF
   01BD 55                  640 	.db #0x55
   01BE FF                  641 	.db #0xFF
   01BF D5                  642 	.db #0xD5
   01C0 FF                  643 	.db #0xFF
   01C1 15                  644 	.db #0x15
   01C2 FF                  645 	.db #0xFF
   01C3 F5                  646 	.db #0xF5
   01C4 FF                  647 	.db #0xFF
   01C5 05                  648 	.db #0x05
   01C6 FF                  649 	.db #0xFF
   01C7 FD                  650 	.db #0xFD
   01C8 FF                  651 	.db #0xFF
   01C9 01                  652 	.db #0x01
   01CA FF                  653 	.db #0xFF
   01CB FF                  654 	.db #0xFF
   01CC                     655 _INITIAL_LIVES:
   01CC 03 00               656 	.dw #0x0003
   01CE                     657 _paddle_sprite_left:
   01CE 00 00               658 	.dw #0x0000
   01D0                     659 _paddle_sprite_right:
   01D0 01 00               660 	.dw #0x0001
   01D2                     661 _paddle_speed:
   01D2 02 00               662 	.dw #0x0002
   01D4                     663 _ball_sprite_left:
   01D4 02 00               664 	.dw #0x0002
   01D6                     665 _ball_sprite_right:
   01D6 03 00               666 	.dw #0x0003
   01D8                     667 _lives_sprite_begin:
   01D8 04 00               668 	.dw #0x0004
                            669 ;	bustout.c 104
                            670 ;	genLabel
                            671 ;	genFunction
                            672 ;	---------------------------------
                            673 ; Function set_ball
                            674 ; ---------------------------------
   01DA                     675 ___set_ball_start:
   01DA                     676 _set_ball:
   01DA E8 FE               677 	lda	sp,-2(sp)
                            678 ;	bustout.c 106
                            679 ;	genRightShift
                            680 ;	AOP_HL for _SCREEN_WIDTH
   01DC 21 00 00            681 	ld	hl,#_SCREEN_WIDTH
   01DF 4E                  682 	ld	c,(hl)
   01E0 23                  683 	inc	hl
   01E1 46                  684 	ld	b,(hl)
   01E2 CB 28               685 	sra	b
   01E4 CB 19               686 	rr	c
                            687 ;	genCast
                            688 ;	AOP_HL for _ball_x
   01E6 21 11 00            689 	ld	hl,#_ball_x
   01E9 71                  690 	ld	(hl),c
                            691 ;	bustout.c 107
                            692 ;	genMinus
                            693 ;	AOP_HL for _SCREEN_HEIGHT
   01EA 21 02 00            694 	ld	hl,#_SCREEN_HEIGHT
   01ED 7E                  695 	ld	a,(hl)
   01EE C6 FB               696 	add	a,#0xFB
   01F0 4F                  697 	ld	c,a
   01F1 23                  698 	inc	hl
   01F2 7E                  699 	ld	a,(hl)
   01F3 CE FF               700 	adc	a,#0xFF
   01F5 47                  701 	ld	b,a
                            702 ;	genCast
                            703 ;	AOP_HL for _ball_y
   01F6 21 12 00            704 	ld	hl,#_ball_y
   01F9 71                  705 	ld	(hl),c
                            706 ;	bustout.c 109
                            707 ;	genIpush
                            708 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   01FA 21 CC 00            709 	ld	hl,#_ball_sprite_data
   01FD E5                  710 	push	hl
                            711 ;	genIpush
   01FE 21 08 08            712 	ld	hl,#0x0808
   0201 E5                  713 	push	hl
                            714 ;	genCall
   0202 CD 00 00            715 	call	_set_sprite_data
   0205 E8 04               716 	lda	sp,4(sp)
                            717 ;	bustout.c 110
                            718 ;	genAssign
                            719 ;	AOP_HL for _ball_sprite_left
   0207 21 D4 01            720 	ld	hl,#_ball_sprite_left
   020A 4E                  721 	ld	c,(hl)
   020B 23                  722 	inc	hl
   020C 46                  723 	ld	b,(hl)
                            724 ;	genCast
                            725 ; Removed redundent load
                            726 ;	genIpush
                            727 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   020D 3E 08               728 	ld	a,#0x08
   020F F5                  729 	push	af
   0210 33                  730 	inc	sp
                            731 ;	genIpush
   0211 79                  732 	ld	a,c
   0212 F5                  733 	push	af
   0213 33                  734 	inc	sp
                            735 ;	genCall
   0214 CD 00 00            736 	call	_set_sprite_tile
   0217 E8 02               737 	lda	sp,2(sp)
                            738 ;	bustout.c 111
                            739 ;	genAssign
                            740 ;	AOP_HL for _ball_sprite_right
   0219 21 D6 01            741 	ld	hl,#_ball_sprite_right
   021C 4E                  742 	ld	c,(hl)
   021D 23                  743 	inc	hl
   021E 46                  744 	ld	b,(hl)
                            745 ;	genCast
                            746 ; Removed redundent load
                            747 ;	genIpush
                            748 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   021F 3E 0A               749 	ld	a,#0x0A
   0221 F5                  750 	push	af
   0222 33                  751 	inc	sp
                            752 ;	genIpush
   0223 79                  753 	ld	a,c
   0224 F5                  754 	push	af
   0225 33                  755 	inc	sp
                            756 ;	genCall
   0226 CD 00 00            757 	call	_set_sprite_tile
   0229 E8 02               758 	lda	sp,2(sp)
                            759 ;	bustout.c 112
                            760 ;	genAssign
                            761 ;	AOP_HL for _ball_sprite_left
   022B 21 D4 01            762 	ld	hl,#_ball_sprite_left
   022E 4E                  763 	ld	c,(hl)
   022F 23                  764 	inc	hl
   0230 46                  765 	ld	b,(hl)
                            766 ;	genCast
                            767 ; Removed redundent load
                            768 ;	genIpush
                            769 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            770 ;	AOP_HL for _ball_y
   0231 21 12 00            771 	ld	hl,#_ball_y
   0234 7E                  772 	ld	a,(hl)
   0235 F5                  773 	push	af
   0236 33                  774 	inc	sp
                            775 ;	genIpush
                            776 ;	AOP_HL for _ball_x
   0237 21 11 00            777 	ld	hl,#_ball_x
   023A 7E                  778 	ld	a,(hl)
   023B F5                  779 	push	af
   023C 33                  780 	inc	sp
                            781 ;	genIpush
   023D 79                  782 	ld	a,c
   023E F5                  783 	push	af
   023F 33                  784 	inc	sp
                            785 ;	genCall
   0240 CD 00 00            786 	call	_move_sprite
   0243 E8 03               787 	lda	sp,3(sp)
                            788 ;	bustout.c 113
                            789 ;	genPlus
                            790 ;	AOP_HL for _ball_x
                            791 ;	genPlusIncr
                            792 ;	Can't optimise plus by inc, falling back to the normal way
   0245 21 11 00            793 	ld	hl,#_ball_x
   0248 7E                  794 	ld	a,(hl)
   0249 C6 08               795 	add	a,#0x08
   024B 4F                  796 	ld	c,a
                            797 ;	genAssign
                            798 ;	AOP_HL for _ball_sprite_right
                            799 ;	AOP_STK for _set_ball_sloc0_1_0
   024C 21 D6 01            800 	ld	hl,#_ball_sprite_right
   024F 2A                  801 	ld	a,(hl+)
   0250 5E                  802 	ld	e,(hl)
   0251 F8 00               803 	lda	hl,0(sp)
   0253 22                  804 	ld	(hl+),a
   0254 73                  805 	ld	(hl),e
                            806 ;	genCast
                            807 ;	AOP_STK for _set_ball_sloc0_1_0
   0255 2B                  808 	dec	hl
   0256 46                  809 	ld	b,(hl)
                            810 ;	genIpush
                            811 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            812 ;	AOP_HL for _ball_y
   0257 21 12 00            813 	ld	hl,#_ball_y
   025A 7E                  814 	ld	a,(hl)
   025B F5                  815 	push	af
   025C 33                  816 	inc	sp
                            817 ;	genIpush
   025D 79                  818 	ld	a,c
   025E F5                  819 	push	af
   025F 33                  820 	inc	sp
                            821 ;	genIpush
   0260 78                  822 	ld	a,b
   0261 F5                  823 	push	af
   0262 33                  824 	inc	sp
                            825 ;	genCall
   0263 CD 00 00            826 	call	_move_sprite
   0266 E8 03               827 	lda	sp,3(sp)
                            828 ;	bustout.c 116
                            829 ;	genIfx
                            830 ;	AOP_STK for 
   0268 F8 04               831 	lda	hl,4(sp)
   026A 2A                  832 	ld	a,(hl+)
   026B B6                  833 	or	a,(hl)
   026C CA 7C 02            834 	jp	z,00102$
                            835 ;	bustout.c 117
                            836 ;	genAssign
                            837 ;	AOP_HL for _ball_vel_y
   026F 21 14 00            838 	ld	hl,#_ball_vel_y
   0272 36 FF               839 	ld	(hl),#0xFF
                            840 ;	bustout.c 118
                            841 ;	genAssign
                            842 ;	AOP_HL for _ball_vel_x
   0274 21 13 00            843 	ld	hl,#_ball_vel_x
   0277 36 FF               844 	ld	(hl),#0xFF
                            845 ;	genGoto
   0279 C3 86 02            846 	jp	00104$
                            847 ;	genLabel
   027C                     848 00102$:
                            849 ;	bustout.c 120
                            850 ;	genAssign
                            851 ;	AOP_HL for _ball_vel_x
   027C 21 13 00            852 	ld	hl,#_ball_vel_x
   027F 36 00               853 	ld	(hl),#0x00
                            854 ;	bustout.c 121
                            855 ;	genAssign
                            856 ;	AOP_HL for _ball_vel_y
   0281 21 14 00            857 	ld	hl,#_ball_vel_y
   0284 36 00               858 	ld	(hl),#0x00
                            859 ;	genLabel
   0286                     860 00104$:
                            861 ;	genEndFunction
   0286 E8 02               862 	lda	sp,2(sp)
   0288 C9                  863 	ret
   0289                     864 ___set_ball_end:
                            865 ;	bustout.c 125
                            866 ;	genLabel
                            867 ;	genFunction
                            868 ;	---------------------------------
                            869 ; Function set_lives
                            870 ; ---------------------------------
   0289                     871 ___set_lives_start:
   0289                     872 _set_lives:
   0289 E8 F1               873 	lda	sp,-15(sp)
                            874 ;	bustout.c 128
                            875 ;	genAssign
                            876 ;	AOP_HL for _lives_sprite_begin
   028B 21 D8 01            877 	ld	hl,#_lives_sprite_begin
   028E 4E                  878 	ld	c,(hl)
   028F 23                  879 	inc	hl
   0290 46                  880 	ld	b,(hl)
                            881 ;	genAssign
                            882 ;	AOP_STK for _set_lives_sp_1_1
   0291 F8 03               883 	lda	hl,3(sp)
   0293 71                  884 	ld	(hl),c
   0294 23                  885 	inc	hl
   0295 70                  886 	ld	(hl),b
                            887 ;	bustout.c 130
                            888 ;	genIpush
                            889 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0296 21 0C 01            890 	ld	hl,#_smile_sprite_data
   0299 E5                  891 	push	hl
                            892 ;	genIpush
   029A 21 10 08            893 	ld	hl,#0x0810
   029D E5                  894 	push	hl
                            895 ;	genCall
   029E CD 00 00            896 	call	_set_sprite_data
   02A1 E8 04               897 	lda	sp,4(sp)
                            898 ;	bustout.c 131
                            899 ;	genIpush
                            900 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02A3 21 4C 01            901 	ld	hl,#_death_sprite_data
   02A6 E5                  902 	push	hl
                            903 ;	genIpush
   02A7 21 18 08            904 	ld	hl,#0x0818
   02AA E5                  905 	push	hl
                            906 ;	genCall
   02AB CD 00 00            907 	call	_set_sprite_data
   02AE E8 04               908 	lda	sp,4(sp)
                            909 ;	bustout.c 133
                            910 ;	genAssign
                            911 ;	AOP_STK for _set_lives_i_1_1
   02B0 F8 0D               912 	lda	hl,13(sp)
   02B2 36 00               913 	ld	(hl),#0x00
   02B4 23                  914 	inc	hl
   02B5 36 00               915 	ld	(hl),#0x00
                            916 ;	genLabel
   02B7                     917 00101$:
                            918 ;	genCmpLt
                            919 ;	AOP_STK for _set_lives_i_1_1
                            920 ;	AOP_HL for _lives
   02B7 F8 0E               921 	lda	hl,14(sp)
   02B9 7E                  922 	ld	a,(hl)
   02BA EE 80               923 	xor	a,#0x80
   02BC 5F                  924 	ld	e,a
   02BD 21 08 00            925 	ld	hl,#_lives + 1
   02C0 7E                  926 	ld	a,(hl)
   02C1 EE 80               927 	xor	a,#0x80
   02C3 57                  928 	ld	d,a
   02C4 F8 0D               929 	lda	hl,13(sp)
   02C6 7E                  930 	ld	a,(hl)
   02C7 21 07 00            931 	ld	hl,#_lives
   02CA 96                  932 	sub	a,(hl)
   02CB 7B                  933 	ld	a,e
   02CC 9A                  934 	sbc	a,d
   02CD D2 87 03            935 	jp	nc,00104$
                            936 ;	bustout.c 134
                            937 ;	genLeftShift
                            938 ;	AOP_STK for _set_lives_i_1_1
                            939 ;	AOP_STK for _set_lives_offset_1_1
   02D0 F8 0D               940 	lda	hl,13(sp)
   02D2 7E                  941 	ld	a,(hl)
   02D3 F8 05               942 	lda	hl,5(sp)
   02D5 77                  943 	ld	(hl),a
   02D6 F8 0E               944 	lda	hl,14(sp)
   02D8 7E                  945 	ld	a,(hl)
   02D9 F8 06               946 	lda	hl,6(sp)
   02DB 77                  947 	ld	(hl),a
   02DC 3E 05               948 	ld	a,#0x04+1
   02DE 18 07               949 	jr	00116$
   02E0                     950 00115$:
   02E0 F8 05               951 	lda	hl,5(sp)
   02E2 CB 26               952 	sla	(hl)
   02E4 23                  953 	inc	hl
   02E5 CB 16               954 	rl	(hl)
   02E7                     955 00116$:
   02E7 3D                  956 	dec	a
   02E8 20 F6               957 	jr	nz,00115$
                            958 ;	bustout.c 135
                            959 ;	genAssign
                            960 ;	AOP_STK for _set_lives_sp_1_1
                            961 ;	AOP_STK for _set_lives_sloc0_1_0
   02EA F8 03               962 	lda	hl,3(sp)
   02EC 2A                  963 	ld	a,(hl+)
   02ED 5E                  964 	ld	e,(hl)
   02EE F8 01               965 	lda	hl,1(sp)
   02F0 22                  966 	ld	(hl+),a
   02F1 73                  967 	ld	(hl),e
                            968 ;	genPlus
                            969 ;	AOP_STK for _set_lives_sp_1_1
                            970 ;	genPlusIncr
   02F2 23                  971 	inc	hl
   02F3 34                  972 	inc	(hl)
   02F4 20 02               973 	jr	nz,00117$
   02F6 23                  974 	inc	hl
   02F7 34                  975 	inc	(hl)
   02F8                     976 00117$:
                            977 ;	genAssign
                            978 ;	AOP_STK for _set_lives_sloc0_1_0
                            979 ;	AOP_STK for _set_lives_a_1_1
   02F8 F8 01               980 	lda	hl,1(sp)
   02FA 2A                  981 	ld	a,(hl+)
   02FB 5E                  982 	ld	e,(hl)
   02FC F8 09               983 	lda	hl,9(sp)
   02FE 22                  984 	ld	(hl+),a
   02FF 73                  985 	ld	(hl),e
                            986 ;	bustout.c 136
                            987 ;	genAssign
                            988 ;	AOP_STK for _set_lives_sp_1_1
                            989 ;	AOP_STK for _set_lives_sloc0_1_0
   0300 F8 03               990 	lda	hl,3(sp)
   0302 2A                  991 	ld	a,(hl+)
   0303 5E                  992 	ld	e,(hl)
   0304 F8 01               993 	lda	hl,1(sp)
   0306 22                  994 	ld	(hl+),a
   0307 73                  995 	ld	(hl),e
                            996 ;	genPlus
                            997 ;	AOP_STK for _set_lives_sp_1_1
                            998 ;	genPlusIncr
   0308 23                  999 	inc	hl
   0309 34                 1000 	inc	(hl)
   030A 20 02              1001 	jr	nz,00118$
   030C 23                 1002 	inc	hl
   030D 34                 1003 	inc	(hl)
   030E                    1004 00118$:
                           1005 ;	genAssign
                           1006 ;	AOP_STK for _set_lives_sloc0_1_0
                           1007 ;	AOP_STK for _set_lives_b_1_1
   030E F8 01              1008 	lda	hl,1(sp)
   0310 2A                 1009 	ld	a,(hl+)
   0311 5E                 1010 	ld	e,(hl)
   0312 F8 07              1011 	lda	hl,7(sp)
   0314 22                 1012 	ld	(hl+),a
   0315 73                 1013 	ld	(hl),e
                           1014 ;	bustout.c 138
                           1015 ;	genCast
                           1016 ;	AOP_STK for _set_lives_a_1_1
   0316 23                 1017 	inc	hl
   0317 4E                 1018 	ld	c,(hl)
                           1019 ;	genIpush
                           1020 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0318 C5                 1021 	push	bc
   0319 3E 10              1022 	ld	a,#0x10
   031B F5                 1023 	push	af
   031C 33                 1024 	inc	sp
                           1025 ;	genIpush
   031D 79                 1026 	ld	a,c
   031E F5                 1027 	push	af
   031F 33                 1028 	inc	sp
                           1029 ;	genCall
   0320 CD 00 00           1030 	call	_set_sprite_tile
   0323 E8 02              1031 	lda	sp,2(sp)
   0325 E1                 1032 	pop	hl
   0326 4D                 1033 	ld	c,l
                           1034 ;	bustout.c 139
                           1035 ;	genCast
                           1036 ;	AOP_STK for _set_lives_b_1_1
   0327 F8 07              1037 	lda	hl,7(sp)
   0329 46                 1038 	ld	b,(hl)
                           1039 ;	genIpush
                           1040 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   032A C5                 1041 	push	bc
   032B 3E 12              1042 	ld	a,#0x12
   032D F5                 1043 	push	af
   032E 33                 1044 	inc	sp
                           1045 ;	genIpush
   032F 78                 1046 	ld	a,b
   0330 F5                 1047 	push	af
   0331 33                 1048 	inc	sp
                           1049 ;	genCall
   0332 CD 00 00           1050 	call	_set_sprite_tile
   0335 E8 02              1051 	lda	sp,2(sp)
   0337 C1                 1052 	pop	bc
                           1053 ;	bustout.c 140
                           1054 ;	genPlus
                           1055 ;	AOP_STK for _set_lives_offset_1_1
                           1056 ;	AOP_STK for _set_lives_sloc0_1_0
                           1057 ;	genPlusIncr
                           1058 ;	Can't optimise plus by inc, falling back to the normal way
   0338 F8 05              1059 	lda	hl,5(sp)
   033A 5E                 1060 	ld	e,(hl)
   033B 23                 1061 	inc	hl
   033C 56                 1062 	ld	d,(hl)
   033D 21 08 00           1063 	ld	hl,#0x0008
   0340 19                 1064 	add	hl,de
   0341 7D                 1065 	ld	a,l
   0342 54                 1066 	ld	d,h
   0343 F8 01              1067 	lda	hl,1(sp)
   0345 22                 1068 	ld	(hl+),a
   0346 72                 1069 	ld	(hl),d
                           1070 ;	genCast
                           1071 ;	AOP_STK for _set_lives_sloc0_1_0
                           1072 ;	AOP_STK for _set_lives_sloc1_1_0
   0347 2B                 1073 	dec	hl
   0348 7E                 1074 	ld	a,(hl)
   0349 2B                 1075 	dec	hl
   034A 77                 1076 	ld	(hl),a
                           1077 ;	genIpush
                           1078 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   034B C5                 1079 	push	bc
   034C 3E 10              1080 	ld	a,#0x10
   034E F5                 1081 	push	af
   034F 33                 1082 	inc	sp
                           1083 ;	genIpush
                           1084 ;	AOP_STK for _set_lives_sloc1_1_0
   0350 7E                 1085 	ld	a,(hl)
   0351 F5                 1086 	push	af
   0352 33                 1087 	inc	sp
                           1088 ;	genIpush
   0353 79                 1089 	ld	a,c
   0354 F5                 1090 	push	af
   0355 33                 1091 	inc	sp
                           1092 ;	genCall
   0356 CD 00 00           1093 	call	_move_sprite
   0359 E8 03              1094 	lda	sp,3(sp)
   035B E1                 1095 	pop	hl
   035C 44                 1096 	ld	b,h
                           1097 ;	bustout.c 141
                           1098 ;	genPlus
                           1099 ;	AOP_STK for _set_lives_offset_1_1
                           1100 ;	AOP_STK for _set_lives_sloc0_1_0
                           1101 ;	genPlusIncr
                           1102 ;	Can't optimise plus by inc, falling back to the normal way
   035D F8 05              1103 	lda	hl,5(sp)
   035F 5E                 1104 	ld	e,(hl)
   0360 23                 1105 	inc	hl
   0361 56                 1106 	ld	d,(hl)
   0362 21 10 00           1107 	ld	hl,#0x0010
   0365 19                 1108 	add	hl,de
   0366 7D                 1109 	ld	a,l
   0367 54                 1110 	ld	d,h
   0368 F8 01              1111 	lda	hl,1(sp)
   036A 22                 1112 	ld	(hl+),a
   036B 72                 1113 	ld	(hl),d
                           1114 ;	genCast
                           1115 ;	AOP_STK for _set_lives_sloc0_1_0
   036C 2B                 1116 	dec	hl
   036D 4E                 1117 	ld	c,(hl)
                           1118 ;	genIpush
                           1119 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   036E 3E 10              1120 	ld	a,#0x10
   0370 F5                 1121 	push	af
   0371 33                 1122 	inc	sp
                           1123 ;	genIpush
   0372 79                 1124 	ld	a,c
   0373 F5                 1125 	push	af
   0374 33                 1126 	inc	sp
                           1127 ;	genIpush
   0375 78                 1128 	ld	a,b
   0376 F5                 1129 	push	af
   0377 33                 1130 	inc	sp
                           1131 ;	genCall
   0378 CD 00 00           1132 	call	_move_sprite
   037B E8 03              1133 	lda	sp,3(sp)
                           1134 ;	bustout.c 133
                           1135 ;	genPlus
                           1136 ;	AOP_STK for _set_lives_i_1_1
                           1137 ;	genPlusIncr
   037D F8 0D              1138 	lda	hl,13(sp)
   037F 34                 1139 	inc	(hl)
   0380 20 02              1140 	jr	nz,00119$
   0382 23                 1141 	inc	hl
   0383 34                 1142 	inc	(hl)
   0384                    1143 00119$:
                           1144 ;	genGoto
   0384 C3 B7 02           1145 	jp	00101$
                           1146 ;	genLabel
   0387                    1147 00104$:
                           1148 ;	bustout.c 144
                           1149 ;	genAssign
                           1150 ;	AOP_HL for _lives
                           1151 ;	AOP_STK for _set_lives_j_1_1
   0387 21 07 00           1152 	ld	hl,#_lives
   038A 2A                 1153 	ld	a,(hl+)
   038B 5E                 1154 	ld	e,(hl)
   038C F8 0B              1155 	lda	hl,11(sp)
   038E 22                 1156 	ld	(hl+),a
   038F 73                 1157 	ld	(hl),e
                           1158 ;	genLabel
   0390                    1159 00105$:
                           1160 ;	genAssign
                           1161 ;	AOP_HL for _INITIAL_LIVES
   0390 21 CC 01           1162 	ld	hl,#_INITIAL_LIVES
   0393 4E                 1163 	ld	c,(hl)
   0394 23                 1164 	inc	hl
   0395 46                 1165 	ld	b,(hl)
                           1166 ;	genCmpLt
                           1167 ;	AOP_STK for _set_lives_j_1_1
   0396 F8 0C              1168 	lda	hl,12(sp)
   0398 7E                 1169 	ld	a,(hl)
   0399 EE 80              1170 	xor	a,#0x80
   039B 5F                 1171 	ld	e,a
   039C 78                 1172 	ld	a,b
   039D EE 80              1173 	xor	a,#0x80
   039F 57                 1174 	ld	d,a
   03A0 2B                 1175 	dec	hl
   03A1 7E                 1176 	ld	a,(hl)
   03A2 91                 1177 	sub	a,c
   03A3 7B                 1178 	ld	a,e
   03A4 9A                 1179 	sbc	a,d
   03A5 D2 51 04           1180 	jp	nc,00109$
                           1181 ;	bustout.c 145
                           1182 ;	genLeftShift
                           1183 ;	AOP_STK for _set_lives_j_1_1
                           1184 ;	AOP_STK for _set_lives_offset_1_1
   03A8 7E                 1185 	ld	a,(hl)
   03A9 F8 05              1186 	lda	hl,5(sp)
   03AB 77                 1187 	ld	(hl),a
   03AC F8 0C              1188 	lda	hl,12(sp)
   03AE 7E                 1189 	ld	a,(hl)
   03AF F8 06              1190 	lda	hl,6(sp)
   03B1 77                 1191 	ld	(hl),a
   03B2 3E 05              1192 	ld	a,#0x04+1
   03B4 18 07              1193 	jr	00121$
   03B6                    1194 00120$:
   03B6 F8 05              1195 	lda	hl,5(sp)
   03B8 CB 26              1196 	sla	(hl)
   03BA 23                 1197 	inc	hl
   03BB CB 16              1198 	rl	(hl)
   03BD                    1199 00121$:
   03BD 3D                 1200 	dec	a
   03BE 20 F6              1201 	jr	nz,00120$
                           1202 ;	bustout.c 146
                           1203 ;	genAssign
                           1204 ;	AOP_STK for _set_lives_sp_1_1
   03C0 F8 03              1205 	lda	hl,3(sp)
   03C2 4E                 1206 	ld	c,(hl)
   03C3 23                 1207 	inc	hl
   03C4 46                 1208 	ld	b,(hl)
                           1209 ;	genPlus
                           1210 ;	AOP_STK for _set_lives_sp_1_1
                           1211 ;	genPlusIncr
   03C5 2B                 1212 	dec	hl
   03C6 34                 1213 	inc	(hl)
   03C7 20 02              1214 	jr	nz,00122$
   03C9 23                 1215 	inc	hl
   03CA 34                 1216 	inc	(hl)
   03CB                    1217 00122$:
                           1218 ;	genAssign
                           1219 ;	AOP_STK for _set_lives_a_1_1
   03CB F8 09              1220 	lda	hl,9(sp)
   03CD 71                 1221 	ld	(hl),c
   03CE 23                 1222 	inc	hl
   03CF 70                 1223 	ld	(hl),b
                           1224 ;	bustout.c 147
                           1225 ;	genAssign
                           1226 ;	AOP_STK for _set_lives_sp_1_1
   03D0 F8 03              1227 	lda	hl,3(sp)
   03D2 4E                 1228 	ld	c,(hl)
   03D3 23                 1229 	inc	hl
   03D4 46                 1230 	ld	b,(hl)
                           1231 ;	genPlus
                           1232 ;	AOP_STK for _set_lives_sp_1_1
                           1233 ;	genPlusIncr
   03D5 2B                 1234 	dec	hl
   03D6 34                 1235 	inc	(hl)
   03D7 20 02              1236 	jr	nz,00123$
   03D9 23                 1237 	inc	hl
   03DA 34                 1238 	inc	(hl)
   03DB                    1239 00123$:
                           1240 ;	genAssign
                           1241 ;	AOP_STK for _set_lives_b_1_1
   03DB F8 07              1242 	lda	hl,7(sp)
   03DD 71                 1243 	ld	(hl),c
   03DE 23                 1244 	inc	hl
   03DF 70                 1245 	ld	(hl),b
                           1246 ;	bustout.c 149
                           1247 ;	genCast
                           1248 ;	AOP_STK for _set_lives_a_1_1
   03E0 23                 1249 	inc	hl
   03E1 4E                 1250 	ld	c,(hl)
                           1251 ;	genIpush
                           1252 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   03E2 C5                 1253 	push	bc
   03E3 3E 18              1254 	ld	a,#0x18
   03E5 F5                 1255 	push	af
   03E6 33                 1256 	inc	sp
                           1257 ;	genIpush
   03E7 79                 1258 	ld	a,c
   03E8 F5                 1259 	push	af
   03E9 33                 1260 	inc	sp
                           1261 ;	genCall
   03EA CD 00 00           1262 	call	_set_sprite_tile
   03ED E8 02              1263 	lda	sp,2(sp)
   03EF E1                 1264 	pop	hl
   03F0 4D                 1265 	ld	c,l
                           1266 ;	bustout.c 150
                           1267 ;	genCast
                           1268 ;	AOP_STK for _set_lives_b_1_1
   03F1 F8 07              1269 	lda	hl,7(sp)
   03F3 46                 1270 	ld	b,(hl)
                           1271 ;	genIpush
                           1272 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   03F4 C5                 1273 	push	bc
   03F5 3E 1A              1274 	ld	a,#0x1A
   03F7 F5                 1275 	push	af
   03F8 33                 1276 	inc	sp
                           1277 ;	genIpush
   03F9 78                 1278 	ld	a,b
   03FA F5                 1279 	push	af
   03FB 33                 1280 	inc	sp
                           1281 ;	genCall
   03FC CD 00 00           1282 	call	_set_sprite_tile
   03FF E8 02              1283 	lda	sp,2(sp)
   0401 C1                 1284 	pop	bc
                           1285 ;	bustout.c 151
                           1286 ;	genPlus
                           1287 ;	AOP_STK for _set_lives_offset_1_1
                           1288 ;	AOP_STK for _set_lives_sloc0_1_0
                           1289 ;	genPlusIncr
                           1290 ;	Can't optimise plus by inc, falling back to the normal way
   0402 F8 05              1291 	lda	hl,5(sp)
   0404 5E                 1292 	ld	e,(hl)
   0405 23                 1293 	inc	hl
   0406 56                 1294 	ld	d,(hl)
   0407 21 08 00           1295 	ld	hl,#0x0008
   040A 19                 1296 	add	hl,de
   040B 7D                 1297 	ld	a,l
   040C 54                 1298 	ld	d,h
   040D F8 01              1299 	lda	hl,1(sp)
   040F 22                 1300 	ld	(hl+),a
   0410 72                 1301 	ld	(hl),d
                           1302 ;	genCast
                           1303 ;	AOP_STK for _set_lives_sloc0_1_0
                           1304 ;	AOP_STK for _set_lives_sloc1_1_0
   0411 2B                 1305 	dec	hl
   0412 7E                 1306 	ld	a,(hl)
   0413 2B                 1307 	dec	hl
   0414 77                 1308 	ld	(hl),a
                           1309 ;	genIpush
                           1310 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0415 C5                 1311 	push	bc
   0416 3E 10              1312 	ld	a,#0x10
   0418 F5                 1313 	push	af
   0419 33                 1314 	inc	sp
                           1315 ;	genIpush
                           1316 ;	AOP_STK for _set_lives_sloc1_1_0
   041A 7E                 1317 	ld	a,(hl)
   041B F5                 1318 	push	af
   041C 33                 1319 	inc	sp
                           1320 ;	genIpush
   041D 79                 1321 	ld	a,c
   041E F5                 1322 	push	af
   041F 33                 1323 	inc	sp
                           1324 ;	genCall
   0420 CD 00 00           1325 	call	_move_sprite
   0423 E8 03              1326 	lda	sp,3(sp)
   0425 E1                 1327 	pop	hl
   0426 44                 1328 	ld	b,h
                           1329 ;	bustout.c 152
                           1330 ;	genPlus
                           1331 ;	AOP_STK for _set_lives_offset_1_1
                           1332 ;	AOP_STK for _set_lives_sloc0_1_0
                           1333 ;	genPlusIncr
                           1334 ;	Can't optimise plus by inc, falling back to the normal way
   0427 F8 05              1335 	lda	hl,5(sp)
   0429 5E                 1336 	ld	e,(hl)
   042A 23                 1337 	inc	hl
   042B 56                 1338 	ld	d,(hl)
   042C 21 10 00           1339 	ld	hl,#0x0010
   042F 19                 1340 	add	hl,de
   0430 7D                 1341 	ld	a,l
   0431 54                 1342 	ld	d,h
   0432 F8 01              1343 	lda	hl,1(sp)
   0434 22                 1344 	ld	(hl+),a
   0435 72                 1345 	ld	(hl),d
                           1346 ;	genCast
                           1347 ;	AOP_STK for _set_lives_sloc0_1_0
   0436 2B                 1348 	dec	hl
   0437 4E                 1349 	ld	c,(hl)
                           1350 ;	genIpush
                           1351 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0438 3E 10              1352 	ld	a,#0x10
   043A F5                 1353 	push	af
   043B 33                 1354 	inc	sp
                           1355 ;	genIpush
   043C 79                 1356 	ld	a,c
   043D F5                 1357 	push	af
   043E 33                 1358 	inc	sp
                           1359 ;	genIpush
   043F 78                 1360 	ld	a,b
   0440 F5                 1361 	push	af
   0441 33                 1362 	inc	sp
                           1363 ;	genCall
   0442 CD 00 00           1364 	call	_move_sprite
   0445 E8 03              1365 	lda	sp,3(sp)
                           1366 ;	bustout.c 144
                           1367 ;	genPlus
                           1368 ;	AOP_STK for _set_lives_j_1_1
                           1369 ;	genPlusIncr
   0447 F8 0B              1370 	lda	hl,11(sp)
   0449 34                 1371 	inc	(hl)
   044A 20 02              1372 	jr	nz,00124$
   044C 23                 1373 	inc	hl
   044D 34                 1374 	inc	(hl)
   044E                    1375 00124$:
                           1376 ;	genGoto
   044E C3 90 03           1377 	jp	00105$
                           1378 ;	genLabel
   0451                    1379 00109$:
                           1380 ;	genEndFunction
   0451 E8 0F              1381 	lda	sp,15(sp)
   0453 C9                 1382 	ret
   0454                    1383 ___set_lives_end:
                           1384 ;	bustout.c 158
                           1385 ;	genLabel
                           1386 ;	genFunction
                           1387 ;	---------------------------------
                           1388 ; Function set_blocks
                           1389 ; ---------------------------------
   0454                    1390 ___set_blocks_start:
   0454                    1391 _set_blocks:
   0454 E8 DD              1392 	lda	sp,-35(sp)
                           1393 ;	bustout.c 161
                           1394 ;	genAssign
                           1395 ;	AOP_HL for _INITIAL_LIVES
   0456 21 CC 01           1396 	ld	hl,#_INITIAL_LIVES
   0459 4E                 1397 	ld	c,(hl)
   045A 23                 1398 	inc	hl
   045B 46                 1399 	ld	b,(hl)
                           1400 ;	genLeftShift
   045C CB 21              1401 	sla	c
   045E CB 10              1402 	rl	b
                           1403 ;	genLeftShift
   0460 CB 21              1404 	sla	c
   0462 CB 10              1405 	rl	b
                           1406 ;	genAssign
                           1407 ;	AOP_HL for _lives_sprite_begin
                           1408 ;	AOP_STK for _set_blocks_sloc0_1_0
   0464 21 D8 01           1409 	ld	hl,#_lives_sprite_begin
   0467 2A                 1410 	ld	a,(hl+)
   0468 5E                 1411 	ld	e,(hl)
   0469 F8 13              1412 	lda	hl,19(sp)
   046B 22                 1413 	ld	(hl+),a
   046C 73                 1414 	ld	(hl),e
                           1415 ;	genPlus
                           1416 ;	AOP_STK for _set_blocks_sloc0_1_0
                           1417 ;	Can't optimise plus by inc, falling back to the normal way
   046D 2B                 1418 	dec	hl
   046E 2A                 1419 	ld	a,(hl+)
   046F 66                 1420 	ld	h,(hl)
   0470 6F                 1421 	ld	l,a
   0471 09                 1422 	add	hl,bc
   0472 4D                 1423 	ld	c,l
   0473 44                 1424 	ld	b,h
                           1425 ;	genAssign
                           1426 ;	AOP_STK for _set_blocks_sp_1_1
   0474 F8 15              1427 	lda	hl,21(sp)
   0476 71                 1428 	ld	(hl),c
   0477 23                 1429 	inc	hl
   0478 70                 1430 	ld	(hl),b
                           1431 ;	bustout.c 163
                           1432 ;	genIpush
                           1433 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0479 21 8C 01           1434 	ld	hl,#_block_sprite_data
   047C E5                 1435 	push	hl
                           1436 ;	genIpush
   047D 21 20 08           1437 	ld	hl,#0x0820
   0480 E5                 1438 	push	hl
                           1439 ;	genCall
   0481 CD 00 00           1440 	call	_set_sprite_data
   0484 E8 04              1441 	lda	sp,4(sp)
                           1442 ;	bustout.c 165
                           1443 ;	genAssign
                           1444 ;	AOP_STK for _set_blocks_i_1_1
   0486 F8 21              1445 	lda	hl,33(sp)
   0488 36 00              1446 	ld	(hl),#0x00
   048A 23                 1447 	inc	hl
   048B 36 00              1448 	ld	(hl),#0x00
                           1449 ;	genLabel
   048D                    1450 00109$:
                           1451 ;	genCmpLt
                           1452 ;	AOP_STK for _set_blocks_i_1_1
   048D F8 22              1453 	lda	hl,34(sp)
   048F 7E                 1454 	ld	a,(hl)
   0490 EE 80              1455 	xor	a,#0x80
   0492 5F                 1456 	ld	e,a
   0493 16 80              1457 	ld	d,#0x80
   0495 2B                 1458 	dec	hl
   0496 7E                 1459 	ld	a,(hl)
   0497 D6 04              1460 	sub	a,#0x04
   0499 7B                 1461 	ld	a,e
   049A 9A                 1462 	sbc	a,d
   049B D2 38 06           1463 	jp	nc,00113$
                           1464 ;	bustout.c 166
                           1465 ;	genLeftShift
                           1466 ;	AOP_STK for _set_blocks_i_1_1
                           1467 ;	AOP_STK for _set_blocks_offset_x_1_1
   049E 7E                 1468 	ld	a,(hl)
   049F F8 19              1469 	lda	hl,25(sp)
   04A1 77                 1470 	ld	(hl),a
   04A2 F8 22              1471 	lda	hl,34(sp)
   04A4 7E                 1472 	ld	a,(hl)
   04A5 F8 1A              1473 	lda	hl,26(sp)
   04A7 77                 1474 	ld	(hl),a
   04A8 3E 05              1475 	ld	a,#0x04+1
   04AA 18 07              1476 	jr	00126$
   04AC                    1477 00125$:
   04AC F8 19              1478 	lda	hl,25(sp)
   04AE CB 26              1479 	sla	(hl)
   04B0 23                 1480 	inc	hl
   04B1 CB 16              1481 	rl	(hl)
   04B3                    1482 00126$:
   04B3 3D                 1483 	dec	a
   04B4 20 F6              1484 	jr	nz,00125$
                           1485 ;	bustout.c 167
                           1486 ;	genAssign
                           1487 ;	AOP_STK for _set_blocks_j_1_1
   04B6 F8 1F              1488 	lda	hl,31(sp)
   04B8 36 00              1489 	ld	(hl),#0x00
   04BA 23                 1490 	inc	hl
   04BB 36 00              1491 	ld	(hl),#0x00
                           1492 ;	genLabel
   04BD                    1493 00105$:
                           1494 ;	genCmpLt
                           1495 ;	AOP_STK for _set_blocks_j_1_1
                           1496 ;	AOP_STK for _set_blocks_sloc0_1_0
   04BD F8 20              1497 	lda	hl,32(sp)
   04BF 7E                 1498 	ld	a,(hl)
   04C0 EE 80              1499 	xor	a,#0x80
   04C2 5F                 1500 	ld	e,a
   04C3 16 80              1501 	ld	d,#0x80
   04C5 2B                 1502 	dec	hl
   04C6 7E                 1503 	ld	a,(hl)
   04C7 D6 03              1504 	sub	a,#0x03
   04C9 7B                 1505 	ld	a,e
   04CA 9A                 1506 	sbc	a,d
   04CB 3E 00              1507 	ld	a,#0x00
   04CD 17                 1508 	rla
   04CE F8 13              1509 	lda	hl,19(sp)
   04D0 77                 1510 	ld	(hl),a
                           1511 ;	genIfx
                           1512 ;	AOP_STK for _set_blocks_sloc0_1_0
   04D1 AF                 1513 	xor	a,a
   04D2 B6                 1514 	or	a,(hl)
   04D3 CA 2E 06           1515 	jp	z,00111$
                           1516 ;	bustout.c 168
                           1517 ;	genLeftShift
                           1518 ;	AOP_STK for _set_blocks_j_1_1
                           1519 ;	AOP_STK for _set_blocks_offset_y_1_1
   04D6 F8 1F              1520 	lda	hl,31(sp)
   04D8 7E                 1521 	ld	a,(hl)
   04D9 F8 17              1522 	lda	hl,23(sp)
   04DB 77                 1523 	ld	(hl),a
   04DC F8 20              1524 	lda	hl,32(sp)
   04DE 7E                 1525 	ld	a,(hl)
   04DF F8 18              1526 	lda	hl,24(sp)
   04E1 77                 1527 	ld	(hl),a
   04E2 3E 05              1528 	ld	a,#0x04+1
   04E4 18 07              1529 	jr	00128$
   04E6                    1530 00127$:
   04E6 F8 17              1531 	lda	hl,23(sp)
   04E8 CB 26              1532 	sla	(hl)
   04EA 23                 1533 	inc	hl
   04EB CB 16              1534 	rl	(hl)
   04ED                    1535 00128$:
   04ED 3D                 1536 	dec	a
   04EE 20 F6              1537 	jr	nz,00127$
                           1538 ;	genAssign
                           1539 ;	AOP_STK for _set_blocks_offset_y_1_1
                           1540 ;	(registers are the same)
                           1541 ;	bustout.c 169
                           1542 ;	genAssign
                           1543 ;	AOP_STK for _set_blocks_sp_1_1
                           1544 ;	AOP_STK for _set_blocks_sloc4_1_0
   04F0 F8 15              1545 	lda	hl,21(sp)
   04F2 2A                 1546 	ld	a,(hl+)
   04F3 5E                 1547 	ld	e,(hl)
   04F4 F8 0B              1548 	lda	hl,11(sp)
   04F6 22                 1549 	ld	(hl+),a
   04F7 73                 1550 	ld	(hl),e
                           1551 ;	genPlus
                           1552 ;	AOP_STK for _set_blocks_sp_1_1
                           1553 ;	AOP_STK for _set_blocks_sloc1_1_0
                           1554 ;	genPlusIncr
                           1555 ;	Can't optimise plus by inc, falling back to the normal way
   04F8 F8 15              1556 	lda	hl,21(sp)
   04FA 5E                 1557 	ld	e,(hl)
   04FB 23                 1558 	inc	hl
   04FC 56                 1559 	ld	d,(hl)
   04FD 21 01 00           1560 	ld	hl,#0x0001
   0500 19                 1561 	add	hl,de
   0501 7D                 1562 	ld	a,l
   0502 54                 1563 	ld	d,h
   0503 F8 11              1564 	lda	hl,17(sp)
   0505 22                 1565 	ld	(hl+),a
   0506 72                 1566 	ld	(hl),d
                           1567 ;	genAssign
                           1568 ;	AOP_STK for _set_blocks_sloc1_1_0
                           1569 ;	AOP_STK for _set_blocks_sp_1_1
   0507 2B                 1570 	dec	hl
   0508 2A                 1571 	ld	a,(hl+)
   0509 5E                 1572 	ld	e,(hl)
   050A F8 15              1573 	lda	hl,21(sp)
   050C 22                 1574 	ld	(hl+),a
   050D 73                 1575 	ld	(hl),e
                           1576 ;	genAssign
                           1577 ;	AOP_STK for _set_blocks_sloc4_1_0
                           1578 ;	AOP_STK for _set_blocks_a_1_1
   050E F8 0B              1579 	lda	hl,11(sp)
   0510 2A                 1580 	ld	a,(hl+)
   0511 5E                 1581 	ld	e,(hl)
   0512 F8 1D              1582 	lda	hl,29(sp)
   0514 22                 1583 	ld	(hl+),a
   0515 73                 1584 	ld	(hl),e
                           1585 ;	bustout.c 170
                           1586 ;	genAssign
                           1587 ;	AOP_STK for _set_blocks_sp_1_1
                           1588 ;	AOP_STK for _set_blocks_sloc2_1_0
   0516 F8 15              1589 	lda	hl,21(sp)
   0518 2A                 1590 	ld	a,(hl+)
   0519 5E                 1591 	ld	e,(hl)
   051A F8 0F              1592 	lda	hl,15(sp)
   051C 22                 1593 	ld	(hl+),a
   051D 73                 1594 	ld	(hl),e
                           1595 ;	genPlus
                           1596 ;	AOP_STK for _set_blocks_sp_1_1
                           1597 ;	AOP_STK for _set_blocks_sloc3_1_0
                           1598 ;	genPlusIncr
                           1599 ;	Can't optimise plus by inc, falling back to the normal way
   051E F8 15              1600 	lda	hl,21(sp)
   0520 5E                 1601 	ld	e,(hl)
   0521 23                 1602 	inc	hl
   0522 56                 1603 	ld	d,(hl)
   0523 21 01 00           1604 	ld	hl,#0x0001
   0526 19                 1605 	add	hl,de
   0527 7D                 1606 	ld	a,l
   0528 54                 1607 	ld	d,h
   0529 F8 0D              1608 	lda	hl,13(sp)
   052B 22                 1609 	ld	(hl+),a
   052C 72                 1610 	ld	(hl),d
                           1611 ;	genAssign
                           1612 ;	AOP_STK for _set_blocks_sloc3_1_0
                           1613 ;	AOP_STK for _set_blocks_sp_1_1
   052D 2B                 1614 	dec	hl
   052E 2A                 1615 	ld	a,(hl+)
   052F 5E                 1616 	ld	e,(hl)
   0530 F8 15              1617 	lda	hl,21(sp)
   0532 22                 1618 	ld	(hl+),a
   0533 73                 1619 	ld	(hl),e
                           1620 ;	genAssign
                           1621 ;	AOP_STK for _set_blocks_sloc2_1_0
                           1622 ;	AOP_STK for _set_blocks_b_1_1
   0534 F8 0F              1623 	lda	hl,15(sp)
   0536 2A                 1624 	ld	a,(hl+)
   0537 5E                 1625 	ld	e,(hl)
   0538 F8 1B              1626 	lda	hl,27(sp)
   053A 22                 1627 	ld	(hl+),a
   053B 73                 1628 	ld	(hl),e
                           1629 ;	bustout.c 172
                           1630 ;	genCmpEq
                           1631 ;	AOP_STK for _set_blocks_i_1_1
                           1632 ; genCmpEq: left 2, right 2, result 1
   053C F8 21              1633 	lda	hl,33(sp)
   053E 2A                 1634 	ld	a,(hl+)
   053F B6                 1635 	or	a,(hl)
   0540 C2 47 05           1636 	jp	nz,00129$
   0543 3E 01              1637 	ld	a,#0x01
   0545 18 01              1638 	jr	00130$
   0547                    1639 00129$:
   0547 AF                 1640 	xor	a,a
   0548                    1641 00130$:
                           1642 ;	genIfx
   0548 B7                 1643 	or	a,a
   0549 CA 77 05           1644 	jp	z,00102$
                           1645 ;	genCmpEq
                           1646 ;	AOP_STK for _set_blocks_j_1_1
                           1647 ; genCmpEq: left 2, right 2, result 1
   054C F8 1F              1648 	lda	hl,31(sp)
   054E 2A                 1649 	ld	a,(hl+)
   054F B6                 1650 	or	a,(hl)
   0550 C2 57 05           1651 	jp	nz,00131$
   0553 3E 01              1652 	ld	a,#0x01
   0555 18 01              1653 	jr	00132$
   0557                    1654 00131$:
   0557 AF                 1655 	xor	a,a
   0558                    1656 00132$:
                           1657 ;	genIfx
   0558 B7                 1658 	or	a,a
   0559 CA 77 05           1659 	jp	z,00102$
                           1660 ;	bustout.c 173
                           1661 ;	genAssign (pointer)
                           1662 ;	AOP_STK for _set_blocks_a_1_1
   055C 11 15 00           1663 	ld	de,#_blocks
   055F F8 1D              1664 	lda	hl,29(sp)
   0561 7E                 1665 	ld	a,(hl)
   0562 12                 1666 	ld	(de),a
   0563 13                 1667 	inc	de
   0564 23                 1668 	inc	hl
   0565 7E                 1669 	ld	a,(hl)
   0566 12                 1670 	ld	(de),a
                           1671 ;	bustout.c 174
                           1672 ;	genPlus
                           1673 ;	genPlusIncr
   0567 21 17 00           1674 	ld	hl,#_blocks + 2
                           1675 ;	genAssign (pointer)
                           1676 ;	AOP_STK for _set_blocks_b_1_1
   056A 5D                 1677 	ld	e,l
   056B 54                 1678 	ld	d,h
   056C F8 1B              1679 	lda	hl,27(sp)
   056E 7E                 1680 	ld	a,(hl)
   056F 12                 1681 	ld	(de),a
   0570 13                 1682 	inc	de
   0571 23                 1683 	inc	hl
   0572 7E                 1684 	ld	a,(hl)
   0573 12                 1685 	ld	(de),a
                           1686 ;	genGoto
   0574 C3 91 05           1687 	jp	00103$
                           1688 ;	genLabel
   0577                    1689 00102$:
                           1690 ;	bustout.c 177
                           1691 ;	genPlus
                           1692 ;	genPlusIncr
   0577 21 45 00           1693 	ld	hl,#_blocks + 48
                           1694 ;	genAssign (pointer)
                           1695 ;	AOP_STK for _set_blocks_a_1_1
   057A 5D                 1696 	ld	e,l
   057B 54                 1697 	ld	d,h
   057C F8 1D              1698 	lda	hl,29(sp)
   057E 7E                 1699 	ld	a,(hl)
   057F 12                 1700 	ld	(de),a
   0580 13                 1701 	inc	de
   0581 23                 1702 	inc	hl
   0582 7E                 1703 	ld	a,(hl)
   0583 12                 1704 	ld	(de),a
                           1705 ;	bustout.c 178
                           1706 ;	genPlus
                           1707 ;	genPlusIncr
   0584 21 47 00           1708 	ld	hl,#_blocks + 50
                           1709 ;	genAssign (pointer)
                           1710 ;	AOP_STK for _set_blocks_b_1_1
   0587 5D                 1711 	ld	e,l
   0588 54                 1712 	ld	d,h
   0589 F8 1B              1713 	lda	hl,27(sp)
   058B 7E                 1714 	ld	a,(hl)
   058C 12                 1715 	ld	(de),a
   058D 13                 1716 	inc	de
   058E 23                 1717 	inc	hl
   058F 7E                 1718 	ld	a,(hl)
   0590 12                 1719 	ld	(de),a
                           1720 ;	genLabel
   0591                    1721 00103$:
                           1722 ;	bustout.c 181
                           1723 ;	genCast
                           1724 ;	AOP_STK for _set_blocks_a_1_1
   0591 F8 1D              1725 	lda	hl,29(sp)
   0593 4E                 1726 	ld	c,(hl)
                           1727 ;	genIpush
                           1728 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0594 C5                 1729 	push	bc
   0595 3E 20              1730 	ld	a,#0x20
   0597 F5                 1731 	push	af
   0598 33                 1732 	inc	sp
                           1733 ;	genIpush
   0599 79                 1734 	ld	a,c
   059A F5                 1735 	push	af
   059B 33                 1736 	inc	sp
                           1737 ;	genCall
   059C CD 00 00           1738 	call	_set_sprite_tile
   059F E8 02              1739 	lda	sp,2(sp)
   05A1 E1                 1740 	pop	hl
   05A2 4D                 1741 	ld	c,l
                           1742 ;	bustout.c 182
                           1743 ;	genCast
                           1744 ;	AOP_STK for _set_blocks_b_1_1
   05A3 F8 1B              1745 	lda	hl,27(sp)
   05A5 46                 1746 	ld	b,(hl)
                           1747 ;	genIpush
                           1748 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   05A6 C5                 1749 	push	bc
   05A7 3E 22              1750 	ld	a,#0x22
   05A9 F5                 1751 	push	af
   05AA 33                 1752 	inc	sp
                           1753 ;	genIpush
   05AB 78                 1754 	ld	a,b
   05AC F5                 1755 	push	af
   05AD 33                 1756 	inc	sp
                           1757 ;	genCall
   05AE CD 00 00           1758 	call	_set_sprite_tile
   05B1 E8 02              1759 	lda	sp,2(sp)
   05B3 C1                 1760 	pop	bc
                           1761 ;	bustout.c 183
                           1762 ;	genPlus
                           1763 ;	AOP_STK for _set_blocks_offset_y_1_1
                           1764 ;	AOP_STK for _set_blocks_sloc5_1_0
                           1765 ;	genPlusIncr
                           1766 ;	Can't optimise plus by inc, falling back to the normal way
   05B4 F8 17              1767 	lda	hl,23(sp)
   05B6 5E                 1768 	ld	e,(hl)
   05B7 23                 1769 	inc	hl
   05B8 56                 1770 	ld	d,(hl)
   05B9 21 30 00           1771 	ld	hl,#0x0030
   05BC 19                 1772 	add	hl,de
   05BD 7D                 1773 	ld	a,l
   05BE 54                 1774 	ld	d,h
   05BF F8 09              1775 	lda	hl,9(sp)
   05C1 22                 1776 	ld	(hl+),a
   05C2 72                 1777 	ld	(hl),d
                           1778 ;	genCast
                           1779 ;	AOP_STK for _set_blocks_sloc5_1_0
                           1780 ;	AOP_STK for _set_blocks_sloc6_1_0
   05C3 2B                 1781 	dec	hl
   05C4 7E                 1782 	ld	a,(hl)
   05C5 2B                 1783 	dec	hl
   05C6 77                 1784 	ld	(hl),a
                           1785 ;	genPlus
                           1786 ;	AOP_STK for _set_blocks_offset_x_1_1
                           1787 ;	AOP_STK for _set_blocks_sloc7_1_0
                           1788 ;	genPlusIncr
                           1789 ;	Can't optimise plus by inc, falling back to the normal way
   05C7 F8 19              1790 	lda	hl,25(sp)
   05C9 5E                 1791 	ld	e,(hl)
   05CA 23                 1792 	inc	hl
   05CB 56                 1793 	ld	d,(hl)
   05CC 21 38 00           1794 	ld	hl,#0x0038
   05CF 19                 1795 	add	hl,de
   05D0 7D                 1796 	ld	a,l
   05D1 54                 1797 	ld	d,h
   05D2 F8 06              1798 	lda	hl,6(sp)
   05D4 22                 1799 	ld	(hl+),a
   05D5 72                 1800 	ld	(hl),d
                           1801 ;	genCast
                           1802 ;	AOP_STK for _set_blocks_sloc7_1_0
                           1803 ;	AOP_STK for _set_blocks_sloc8_1_0
   05D6 2B                 1804 	dec	hl
   05D7 7E                 1805 	ld	a,(hl)
   05D8 2B                 1806 	dec	hl
   05D9 77                 1807 	ld	(hl),a
                           1808 ;	genIpush
                           1809 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   05DA C5                 1810 	push	bc
                           1811 ;	AOP_STK for _set_blocks_sloc6_1_0
   05DB F8 0A              1812 	lda	hl,10(sp)
   05DD 7E                 1813 	ld	a,(hl)
   05DE F5                 1814 	push	af
   05DF 33                 1815 	inc	sp
                           1816 ;	genIpush
                           1817 ;	AOP_STK for _set_blocks_sloc8_1_0
   05E0 F8 08              1818 	lda	hl,8(sp)
   05E2 7E                 1819 	ld	a,(hl)
   05E3 F5                 1820 	push	af
   05E4 33                 1821 	inc	sp
                           1822 ;	genIpush
   05E5 79                 1823 	ld	a,c
   05E6 F5                 1824 	push	af
   05E7 33                 1825 	inc	sp
                           1826 ;	genCall
   05E8 CD 00 00           1827 	call	_move_sprite
   05EB E8 03              1828 	lda	sp,3(sp)
   05ED C1                 1829 	pop	bc
                           1830 ;	bustout.c 184
                           1831 ;	genPlus
                           1832 ;	AOP_STK for _set_blocks_offset_x_1_1
                           1833 ;	AOP_STK for _set_blocks_sloc9_1_0
                           1834 ;	genPlusIncr
                           1835 ;	Can't optimise plus by inc, falling back to the normal way
   05EE F8 19              1836 	lda	hl,25(sp)
   05F0 5E                 1837 	ld	e,(hl)
   05F1 23                 1838 	inc	hl
   05F2 56                 1839 	ld	d,(hl)
   05F3 21 40 00           1840 	ld	hl,#0x0040
   05F6 19                 1841 	add	hl,de
   05F7 7D                 1842 	ld	a,l
   05F8 54                 1843 	ld	d,h
   05F9 F8 03              1844 	lda	hl,3(sp)
   05FB 22                 1845 	ld	(hl+),a
   05FC 72                 1846 	ld	(hl),d
                           1847 ;	genCast
                           1848 ;	AOP_STK for _set_blocks_sloc9_1_0
                           1849 ;	AOP_STK for _set_blocks_sloc10_1_0
   05FD 2B                 1850 	dec	hl
   05FE 7E                 1851 	ld	a,(hl)
   05FF 2B                 1852 	dec	hl
   0600 77                 1853 	ld	(hl),a
                           1854 ;	genIpush
                           1855 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0601 C5                 1856 	push	bc
                           1857 ;	AOP_STK for _set_blocks_sloc6_1_0
   0602 F8 0A              1858 	lda	hl,10(sp)
   0604 7E                 1859 	ld	a,(hl)
   0605 F5                 1860 	push	af
   0606 33                 1861 	inc	sp
                           1862 ;	genIpush
                           1863 ;	AOP_STK for _set_blocks_sloc10_1_0
   0607 F8 05              1864 	lda	hl,5(sp)
   0609 7E                 1865 	ld	a,(hl)
   060A F5                 1866 	push	af
   060B 33                 1867 	inc	sp
                           1868 ;	genIpush
   060C 78                 1869 	ld	a,b
   060D F5                 1870 	push	af
   060E 33                 1871 	inc	sp
                           1872 ;	genCall
   060F CD 00 00           1873 	call	_move_sprite
   0612 E8 03              1874 	lda	sp,3(sp)
   0614 C1                 1875 	pop	bc
                           1876 ;	bustout.c 167
                           1877 ;	genPlus
                           1878 ;	AOP_STK for _set_blocks_j_1_1
                           1879 ;	AOP_STK for _set_blocks_sloc11_1_0
                           1880 ;	genPlusIncr
                           1881 ;	Can't optimise plus by inc, falling back to the normal way
   0615 F8 1F              1882 	lda	hl,31(sp)
   0617 5E                 1883 	ld	e,(hl)
   0618 23                 1884 	inc	hl
   0619 56                 1885 	ld	d,(hl)
   061A 21 01 00           1886 	ld	hl,#0x0001
   061D 19                 1887 	add	hl,de
   061E 7D                 1888 	ld	a,l
   061F 54                 1889 	ld	d,h
   0620 F8 00              1890 	lda	hl,0(sp)
   0622 22                 1891 	ld	(hl+),a
   0623 72                 1892 	ld	(hl),d
                           1893 ;	genAssign
                           1894 ;	AOP_STK for _set_blocks_sloc11_1_0
                           1895 ;	AOP_STK for _set_blocks_j_1_1
   0624 2B                 1896 	dec	hl
   0625 2A                 1897 	ld	a,(hl+)
   0626 5E                 1898 	ld	e,(hl)
   0627 F8 1F              1899 	lda	hl,31(sp)
   0629 22                 1900 	ld	(hl+),a
   062A 73                 1901 	ld	(hl),e
                           1902 ;	genGoto
   062B C3 BD 04           1903 	jp	00105$
                           1904 ;	genLabel
   062E                    1905 00111$:
                           1906 ;	bustout.c 165
                           1907 ;	genPlus
                           1908 ;	AOP_STK for _set_blocks_i_1_1
                           1909 ;	genPlusIncr
   062E F8 21              1910 	lda	hl,33(sp)
   0630 34                 1911 	inc	(hl)
   0631 20 02              1912 	jr	nz,00133$
   0633 23                 1913 	inc	hl
   0634 34                 1914 	inc	(hl)
   0635                    1915 00133$:
                           1916 ;	genGoto
   0635 C3 8D 04           1917 	jp	00109$
                           1918 ;	genLabel
   0638                    1919 00113$:
                           1920 ;	genEndFunction
   0638 E8 23              1921 	lda	sp,35(sp)
   063A C9                 1922 	ret
   063B                    1923 ___set_blocks_end:
                           1924 ;	bustout.c 189
                           1925 ;	genLabel
                           1926 ;	genFunction
                           1927 ;	---------------------------------
                           1928 ; Function input
                           1929 ; ---------------------------------
   063B                    1930 ___input_start:
   063B                    1931 _input:
   063B E8 FE              1932 	lda	sp,-2(sp)
                           1933 ;	bustout.c 192
                           1934 ;	genAnd
                           1935 ;	AOP_HL for _key
   063D 21 06 00           1936 	ld	hl,#_key
   0640 7E                 1937 	ld	a,(hl)
   0641 E6 03              1938 	and	a,#0x03
   0643 20 03              1939 	jr	nz,00122$
   0645 C3 B8 06           1940 	jp	00108$
   0648                    1941 00122$:
                           1942 ;	bustout.c 193
                           1943 ;	genAnd
                           1944 ;	AOP_HL for _key
   0648 21 06 00           1945 	ld	hl,#_key
   064B 7E                 1946 	ld	a,(hl)
   064C E6 02              1947 	and	a,#0x02
   064E 20 03              1948 	jr	nz,00123$
   0650 C3 8A 06           1949 	jp	00102$
   0653                    1950 00123$:
                           1951 ;	genCmpGt
                           1952 ;	AOP_HL for _paddle_x
   0653 3E 00              1953 	ld	a,#0x00
   0655 21 0D 00           1954 	ld	hl,#_paddle_x
   0658 96                 1955 	sub	a,(hl)
   0659 D2 8A 06           1956 	jp	nc,00102$
                           1957 ;	bustout.c 194
                           1958 ;	genAssign
                           1959 ;	AOP_HL for _paddle_speed
   065C 21 D2 01           1960 	ld	hl,#_paddle_speed
   065F 4E                 1961 	ld	c,(hl)
   0660 23                 1962 	inc	hl
   0661 46                 1963 	ld	b,(hl)
                           1964 ;	genMult
   0662 59                 1965 	ld	e,c
   0663 50                 1966 	ld	d,b
   0664 6B                 1967 	ld	l,e
   0665 62                 1968 	ld	h,d
   0666 29                 1969 	add	hl,hl
   0667 19                 1970 	add	hl,de
   0668 29                 1971 	add	hl,hl
   0669 19                 1972 	add	hl,de
   066A 29                 1973 	add	hl,hl
   066B 19                 1974 	add	hl,de
   066C 29                 1975 	add	hl,hl
   066D 19                 1976 	add	hl,de
   066E 29                 1977 	add	hl,hl
   066F 19                 1978 	add	hl,de
   0670 29                 1979 	add	hl,hl
   0671 19                 1980 	add	hl,de
   0672 29                 1981 	add	hl,hl
   0673 19                 1982 	add	hl,de
   0674 29                 1983 	add	hl,hl
   0675 19                 1984 	add	hl,de
   0676 29                 1985 	add	hl,hl
   0677 19                 1986 	add	hl,de
   0678 29                 1987 	add	hl,hl
   0679 19                 1988 	add	hl,de
   067A 29                 1989 	add	hl,hl
   067B 19                 1990 	add	hl,de
   067C 29                 1991 	add	hl,hl
   067D 19                 1992 	add	hl,de
   067E 29                 1993 	add	hl,hl
   067F 19                 1994 	add	hl,de
   0680 29                 1995 	add	hl,hl
   0681 19                 1996 	add	hl,de
   0682 29                 1997 	add	hl,hl
   0683 19                 1998 	add	hl,de
   0684 4D                 1999 	ld	c,l
   0685 44                 2000 	ld	b,h
                           2001 ;	genCast
                           2002 ;	AOP_HL for _paddle_vel_x
   0686 21 0F 00           2003 	ld	hl,#_paddle_vel_x
   0689 71                 2004 	ld	(hl),c
                           2005 ;	genLabel
   068A                    2006 00102$:
                           2007 ;	bustout.c 196
                           2008 ;	genAnd
                           2009 ;	AOP_HL for _key
   068A 21 06 00           2010 	ld	hl,#_key
   068D 7E                 2011 	ld	a,(hl)
   068E E6 01              2012 	and	a,#0x01
   0690 20 03              2013 	jr	nz,00124$
   0692 C3 B8 06           2014 	jp	00108$
   0695                    2015 00124$:
                           2016 ;	genCast
                           2017 ;	AOP_HL for _paddle_x
                           2018 ;	AOP_STK for _input_sloc0_1_0
   0695 21 0D 00           2019 	ld	hl,#_paddle_x
   0698 7E                 2020 	ld	a,(hl)
   0699 F8 00              2021 	lda	hl,0(sp)
   069B 22                 2022 	ld	(hl+),a
   069C 36 00              2023 	ld	(hl),#0x00
                           2024 ;	genAssign
                           2025 ;	AOP_HL for _SCREEN_WIDTH
   069E 21 00 00           2026 	ld	hl,#_SCREEN_WIDTH
   06A1 4E                 2027 	ld	c,(hl)
   06A2 23                 2028 	inc	hl
   06A3 46                 2029 	ld	b,(hl)
                           2030 ;	genCmpLt
                           2031 ;	AOP_STK for _input_sloc0_1_0
   06A4 F8 00              2032 	lda	hl,0(sp)
   06A6 7E                 2033 	ld	a,(hl)
   06A7 91                 2034 	sub	a,c
   06A8 23                 2035 	inc	hl
   06A9 7E                 2036 	ld	a,(hl)
   06AA 98                 2037 	sbc	a,b
   06AB D2 B8 06           2038 	jp	nc,00108$
                           2039 ;	bustout.c 197
                           2040 ;	genAssign
                           2041 ;	AOP_HL for _paddle_speed
   06AE 21 D2 01           2042 	ld	hl,#_paddle_speed
   06B1 4E                 2043 	ld	c,(hl)
   06B2 23                 2044 	inc	hl
   06B3 46                 2045 	ld	b,(hl)
                           2046 ;	genCast
                           2047 ;	AOP_HL for _paddle_vel_x
   06B4 21 0F 00           2048 	ld	hl,#_paddle_vel_x
   06B7 71                 2049 	ld	(hl),c
                           2050 ;	genLabel
   06B8                    2051 00108$:
                           2052 ;	bustout.c 201
                           2053 ;	genAnd
                           2054 ;	AOP_HL for _key
   06B8 21 06 00           2055 	ld	hl,#_key
   06BB 7E                 2056 	ld	a,(hl)
   06BC E6 10              2057 	and	a,#0x10
   06BE 20 03              2058 	jr	nz,00125$
   06C0 C3 F3 06           2059 	jp	00113$
   06C3                    2060 00125$:
                           2061 ;	bustout.c 202
                           2062 ;	genAssign
                           2063 ;	AOP_HL for _game_started
   06C3 21 09 00           2064 	ld	hl,#_game_started
   06C6 36 01              2065 	ld	(hl),#0x01
   06C8 23                 2066 	inc	hl
   06C9 36 00              2067 	ld	(hl),#0x00
                           2068 ;	bustout.c 203
                           2069 ;	genIpush
                           2070 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06CB 21 01 00           2071 	ld	hl,#0x0001
   06CE E5                 2072 	push	hl
                           2073 ;	genCall
   06CF CD DA 01           2074 	call	_set_ball
   06D2 E8 02              2075 	lda	sp,2(sp)
                           2076 ;	bustout.c 204
                           2077 ;	genCmpGt
                           2078 ;	AOP_HL for _lives
   06D4 1E 80              2079 	ld	e,#0x80
   06D6 21 08 00           2080 	ld	hl,#_lives + 1
   06D9 7E                 2081 	ld	a,(hl)
   06DA EE 80              2082 	xor	a,#0x80
   06DC 57                 2083 	ld	d,a
   06DD 3E 00              2084 	ld	a,#0x00
   06DF 2B                 2085 	dec	hl
   06E0 96                 2086 	sub	a,(hl)
   06E1 7B                 2087 	ld	a,e
   06E2 9A                 2088 	sbc	a,d
   06E3 DA F3 06           2089 	jp	c,00113$
                           2090 ;	bustout.c 205
                           2091 ;	genAssign
                           2092 ;	AOP_HL for _INITIAL_LIVES
                           2093 ;	AOP_HL for _lives
   06E6 21 CC 01           2094 	ld	hl,#_INITIAL_LIVES
   06E9 2A                 2095 	ld	a,(hl+)
   06EA 5E                 2096 	ld	e,(hl)
   06EB 21 07 00           2097 	ld	hl,#_lives
   06EE 22                 2098 	ld	(hl+),a
   06EF 73                 2099 	ld	(hl),e
                           2100 ;	bustout.c 206
                           2101 ;	genCall
                           2102 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   06F0 CD 89 02           2103 	call	_set_lives
                           2104 ;	genLabel
   06F3                    2105 00113$:
                           2106 ;	genEndFunction
   06F3 E8 02              2107 	lda	sp,2(sp)
   06F5 C9                 2108 	ret
   06F6                    2109 ___input_end:
                           2110 ;	bustout.c 211
                           2111 ;	genLabel
                           2112 ;	genFunction
                           2113 ;	---------------------------------
                           2114 ; Function physics
                           2115 ; ---------------------------------
   06F6                    2116 ___physics_start:
   06F6                    2117 _physics:
                           2118 	
                           2119 ;	bustout.c 214
                           2120 ;	genAnd
                           2121 ;	AOP_HL for _key
   06F6 21 06 00           2122 	ld	hl,#_key
   06F9 7E                 2123 	ld	a,(hl)
   06FA E6 03              2124 	and	a,#0x03
   06FC 20 03              2125 	jr	nz,00106$
   06FE C3 0D 07           2126 	jp	00102$
   0701                    2127 00106$:
                           2128 ;	bustout.c 215
                           2129 ;	genPlus
                           2130 ;	AOP_HL for _paddle_x
                           2131 ;	AOP_HL for _paddle_vel_x
                           2132 ;	Can't optimise plus by inc, falling back to the normal way
   0701 21 0D 00           2133 	ld	hl,#_paddle_x
   0704 7E                 2134 	ld	a,(hl)
   0705 21 0F 00           2135 	ld	hl,#_paddle_vel_x
   0708 86                 2136 	add	a,(hl)
   0709 21 0D 00           2137 	ld	hl,#_paddle_x
   070C 77                 2138 	ld	(hl),a
                           2139 ;	genLabel
   070D                    2140 00102$:
                           2141 ;	bustout.c 218
                           2142 ;	genPlus
                           2143 ;	AOP_HL for _ball_x
                           2144 ;	AOP_HL for _ball_vel_x
                           2145 ;	Can't optimise plus by inc, falling back to the normal way
   070D 21 11 00           2146 	ld	hl,#_ball_x
   0710 7E                 2147 	ld	a,(hl)
   0711 21 13 00           2148 	ld	hl,#_ball_vel_x
   0714 86                 2149 	add	a,(hl)
   0715 21 11 00           2150 	ld	hl,#_ball_x
   0718 77                 2151 	ld	(hl),a
                           2152 ;	bustout.c 219
                           2153 ;	genPlus
                           2154 ;	AOP_HL for _ball_y
                           2155 ;	AOP_HL for _ball_vel_y
                           2156 ;	Can't optimise plus by inc, falling back to the normal way
   0719 21 12 00           2157 	ld	hl,#_ball_y
   071C 7E                 2158 	ld	a,(hl)
   071D 21 14 00           2159 	ld	hl,#_ball_vel_y
   0720 86                 2160 	add	a,(hl)
   0721 21 12 00           2161 	ld	hl,#_ball_y
   0724 77                 2162 	ld	(hl),a
                           2163 ;	genLabel
   0725                    2164 00103$:
                           2165 ;	genEndFunction
                           2166 	
   0725 C9                 2167 	ret
   0726                    2168 ___physics_end:
                           2169 ;	bustout.c 222
                           2170 ;	genLabel
                           2171 ;	genFunction
                           2172 ;	---------------------------------
                           2173 ; Function collide
                           2174 ; ---------------------------------
   0726                    2175 ___collide_start:
   0726                    2176 _collide:
   0726 E8 FC              2177 	lda	sp,-4(sp)
                           2178 ;	bustout.c 225
                           2179 ;	genCast
                           2180 ;	AOP_HL for _paddle_x
                           2181 ;	AOP_STK for _collide_sloc0_1_0
   0728 21 0D 00           2182 	ld	hl,#_paddle_x
   072B 7E                 2183 	ld	a,(hl)
   072C F8 02              2184 	lda	hl,2(sp)
   072E 22                 2185 	ld	(hl+),a
   072F 36 00              2186 	ld	(hl),#0x00
                           2187 ;	genAssign
                           2188 ;	AOP_HL for _SCREEN_WIDTH
   0731 21 00 00           2189 	ld	hl,#_SCREEN_WIDTH
   0734 4E                 2190 	ld	c,(hl)
   0735 23                 2191 	inc	hl
   0736 46                 2192 	ld	b,(hl)
                           2193 ;	genCmpLt
                           2194 ;	AOP_STK for _collide_sloc0_1_0
   0737 F8 02              2195 	lda	hl,2(sp)
   0739 7E                 2196 	ld	a,(hl)
   073A 91                 2197 	sub	a,c
   073B 23                 2198 	inc	hl
   073C 7E                 2199 	ld	a,(hl)
   073D 98                 2200 	sbc	a,b
   073E DA 46 07           2201 	jp	c,00102$
                           2202 ;	bustout.c 226
                           2203 ;	genAssign
                           2204 ;	AOP_HL for _paddle_vel_x
   0741 21 0F 00           2205 	ld	hl,#_paddle_vel_x
   0744 36 00              2206 	ld	(hl),#0x00
                           2207 ;	genLabel
   0746                    2208 00102$:
                           2209 ;	bustout.c 228
                           2210 ;	genCmpGt
                           2211 ;	AOP_HL for _paddle_x
   0746 3E 00              2212 	ld	a,#0x00
   0748 21 0D 00           2213 	ld	hl,#_paddle_x
   074B 96                 2214 	sub	a,(hl)
   074C DA 54 07           2215 	jp	c,00104$
                           2216 ;	bustout.c 229
                           2217 ;	genAssign
                           2218 ;	AOP_HL for _paddle_vel_x
   074F 21 0F 00           2219 	ld	hl,#_paddle_vel_x
   0752 36 00              2220 	ld	(hl),#0x00
                           2221 ;	genLabel
   0754                    2222 00104$:
                           2223 ;	bustout.c 238
                           2224 ;	genMinus
                           2225 ;	AOP_HL for _SCREEN_HEIGHT
   0754 21 02 00           2226 	ld	hl,#_SCREEN_HEIGHT
   0757 7E                 2227 	ld	a,(hl)
   0758 C6 FC              2228 	add	a,#0xFC
   075A 4F                 2229 	ld	c,a
   075B 23                 2230 	inc	hl
   075C 7E                 2231 	ld	a,(hl)
   075D CE FF              2232 	adc	a,#0xFF
   075F 47                 2233 	ld	b,a
                           2234 ;	genCast
                           2235 ;	AOP_HL for _ball_y
                           2236 ;	AOP_STK for _collide_sloc0_1_0
   0760 21 12 00           2237 	ld	hl,#_ball_y
   0763 7E                 2238 	ld	a,(hl)
   0764 F8 02              2239 	lda	hl,2(sp)
   0766 22                 2240 	ld	(hl+),a
   0767 36 00              2241 	ld	(hl),#0x00
                           2242 ;	genCmpLt
                           2243 ;	AOP_STK for _collide_sloc0_1_0
   0769 2B                 2244 	dec	hl
   076A 7E                 2245 	ld	a,(hl)
   076B 91                 2246 	sub	a,c
   076C 23                 2247 	inc	hl
   076D 7E                 2248 	ld	a,(hl)
   076E 98                 2249 	sbc	a,b
   076F DA 97 07           2250 	jp	c,00111$
                           2251 ;	bustout.c 240
                           2252 ;	genMinus
                           2253 ;	AOP_HL for _ball_x
   0772 21 11 00           2254 	ld	hl,#_ball_x
   0775 7E                 2255 	ld	a,(hl)
   0776 C6 FB              2256 	add	a,#0xFB
                           2257 ;	genCmpGt
                           2258 ;	AOP_HL for _paddle_x
   0778 4F                 2259 	ld	c,a
   0779 21 0D 00           2260 	ld	hl,#_paddle_x
   077C 96                 2261 	sub	a,(hl)
   077D D2 AC 07           2262 	jp	nc,00112$
                           2263 ;	bustout.c 242
                           2264 ;	genPlus
                           2265 ;	AOP_HL for _ball_x
                           2266 ;	genPlusIncr
                           2267 ;	Can't optimise plus by inc, falling back to the normal way
   0780 21 11 00           2268 	ld	hl,#_ball_x
   0783 7E                 2269 	ld	a,(hl)
   0784 C6 05              2270 	add	a,#0x05
   0786 4F                 2271 	ld	c,a
                           2272 ;	genCmpLt
                           2273 ;	AOP_HL for _paddle_x
   0787 21 0D 00           2274 	ld	hl,#_paddle_x
   078A 7E                 2275 	ld	a,(hl)
   078B 91                 2276 	sub	a,c
   078C D2 AC 07           2277 	jp	nc,00112$
                           2278 ;	bustout.c 243
                           2279 ;	genAssign
                           2280 ;	AOP_HL for _ball_vel_y
   078F 21 14 00           2281 	ld	hl,#_ball_vel_y
   0792 36 FF              2282 	ld	(hl),#0xFF
                           2283 ;	genGoto
   0794 C3 AC 07           2284 	jp	00112$
                           2285 ;	genLabel
   0797                    2286 00111$:
                           2287 ;	bustout.c 246
                           2288 ;	genAssign
                           2289 ;	AOP_HL for _SPRITE_SIZE
   0797 21 04 00           2290 	ld	hl,#_SPRITE_SIZE
   079A 4E                 2291 	ld	c,(hl)
   079B 23                 2292 	inc	hl
   079C 46                 2293 	ld	b,(hl)
                           2294 ;	genCmpGt
                           2295 ;	AOP_STK for _collide_sloc0_1_0
   079D 79                 2296 	ld	a,c
   079E F8 02              2297 	lda	hl,2(sp)
   07A0 96                 2298 	sub	a,(hl)
   07A1 78                 2299 	ld	a,b
   07A2 23                 2300 	inc	hl
   07A3 9E                 2301 	sbc	a,(hl)
   07A4 DA AC 07           2302 	jp	c,00112$
                           2303 ;	bustout.c 247
                           2304 ;	genAssign
                           2305 ;	AOP_HL for _ball_vel_y
   07A7 21 14 00           2306 	ld	hl,#_ball_vel_y
   07AA 36 01              2307 	ld	(hl),#0x01
                           2308 ;	genLabel
   07AC                    2309 00112$:
                           2310 ;	bustout.c 250
                           2311 ;	genMinus
                           2312 ;	AOP_HL for _SPRITE_SIZE
   07AC 21 04 00           2313 	ld	hl,#_SPRITE_SIZE
   07AF 7E                 2314 	ld	a,(hl)
   07B0 C6 FC              2315 	add	a,#0xFC
   07B2 4F                 2316 	ld	c,a
   07B3 23                 2317 	inc	hl
   07B4 7E                 2318 	ld	a,(hl)
   07B5 CE FF              2319 	adc	a,#0xFF
   07B7 47                 2320 	ld	b,a
                           2321 ;	genPlus
                           2322 ;	AOP_HL for _SCREEN_HEIGHT
                           2323 ;	Can't optimise plus by inc, falling back to the normal way
   07B8 21 02 00           2324 	ld	hl,#_SCREEN_HEIGHT
   07BB 7E                 2325 	ld	a,(hl)
   07BC 81                 2326 	add	a,c
   07BD 4F                 2327 	ld	c,a
   07BE 23                 2328 	inc	hl
   07BF 7E                 2329 	ld	a,(hl)
   07C0 88                 2330 	adc	a,b
   07C1 47                 2331 	ld	b,a
                           2332 ;	genCmpLt
                           2333 ;	AOP_STK for _collide_sloc0_1_0
   07C2 F8 02              2334 	lda	hl,2(sp)
   07C4 7E                 2335 	ld	a,(hl)
   07C5 91                 2336 	sub	a,c
   07C6 23                 2337 	inc	hl
   07C7 7E                 2338 	ld	a,(hl)
   07C8 98                 2339 	sbc	a,b
   07C9 DA 08 08           2340 	jp	c,00116$
                           2341 ;	bustout.c 251
                           2342 ;	genMinus
                           2343 ;	AOP_HL for _lives
   07CC 21 07 00           2344 	ld	hl,#_lives
   07CF 5E                 2345 	ld	e,(hl)
   07D0 23                 2346 	inc	hl
   07D1 56                 2347 	ld	d,(hl)
   07D2 1B                 2348 	dec	de
   07D3 2B                 2349 	dec	hl
   07D4 73                 2350 	ld	(hl),e
   07D5 23                 2351 	inc	hl
   07D6 72                 2352 	ld	(hl),d
                           2353 ;	bustout.c 252
                           2354 ;	genCall
                           2355 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07D7 CD 00 00           2356 	call	_set_paddle
                           2357 ;	bustout.c 253
                           2358 ;	genIpush
                           2359 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07DA 21 01 00           2360 	ld	hl,#0x0001
   07DD E5                 2361 	push	hl
                           2362 ;	genCall
   07DE CD DA 01           2363 	call	_set_ball
   07E1 E8 02              2364 	lda	sp,2(sp)
                           2365 ;	bustout.c 254
                           2366 ;	genCall
                           2367 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   07E3 CD 89 02           2368 	call	_set_lives
                           2369 ;	bustout.c 255
                           2370 ;	genAssign
                           2371 ;	AOP_HL for _game_started
   07E6 21 09 00           2372 	ld	hl,#_game_started
   07E9 36 00              2373 	ld	(hl),#0x00
   07EB 23                 2374 	inc	hl
   07EC 36 00              2375 	ld	(hl),#0x00
                           2376 ;	bustout.c 256
                           2377 ;	genCmpGt
                           2378 ;	AOP_HL for _lives
   07EE 1E 80              2379 	ld	e,#0x80
   07F0 21 08 00           2380 	ld	hl,#_lives + 1
   07F3 7E                 2381 	ld	a,(hl)
   07F4 EE 80              2382 	xor	a,#0x80
   07F6 57                 2383 	ld	d,a
   07F7 3E 00              2384 	ld	a,#0x00
   07F9 2B                 2385 	dec	hl
   07FA 96                 2386 	sub	a,(hl)
   07FB 7B                 2387 	ld	a,e
   07FC 9A                 2388 	sbc	a,d
   07FD DA 08 08           2389 	jp	c,00116$
                           2390 ;	bustout.c 257
                           2391 ;	genAssign
                           2392 ;	AOP_HL for _game_over
   0800 21 0B 00           2393 	ld	hl,#_game_over
   0803 36 01              2394 	ld	(hl),#0x01
   0805 23                 2395 	inc	hl
   0806 36 00              2396 	ld	(hl),#0x00
                           2397 ;	genLabel
   0808                    2398 00116$:
                           2399 ;	bustout.c 261
                           2400 ;	genRightShift
                           2401 ;	AOP_HL for _SPRITE_SIZE
   0808 21 04 00           2402 	ld	hl,#_SPRITE_SIZE
   080B 4E                 2403 	ld	c,(hl)
   080C 23                 2404 	inc	hl
   080D 46                 2405 	ld	b,(hl)
   080E CB 28              2406 	sra	b
   0810 CB 19              2407 	rr	c
                           2408 ;	genMinus
                           2409 ;	AOP_HL for _SCREEN_WIDTH
                           2410 ;	AOP_STK for _collide_sloc0_1_0
   0812 21 00 00           2411 	ld	hl,#_SCREEN_WIDTH
   0815 5E                 2412 	ld	e,(hl)
   0816 23                 2413 	inc	hl
   0817 56                 2414 	ld	d,(hl)
                           2415 ; Removed redundent load
                           2416 ; Removed redundent load
   0818 7B                 2417 	ld	a,e
   0819 91                 2418 	sub	a,c
   081A 5F                 2419 	ld	e,a
   081B 7A                 2420 	ld	a,d
   081C 98                 2421 	sbc	a,b
   081D F8 03              2422 	lda	hl,3(sp)
   081F 32                 2423 	ld      (hl-),a
   0820 73                 2424 	ld	(hl),e
                           2425 ;	genCast
                           2426 ;	AOP_HL for _ball_x
                           2427 ;	AOP_STK for _collide_sloc1_1_0
   0821 21 11 00           2428 	ld	hl,#_ball_x
   0824 7E                 2429 	ld	a,(hl)
   0825 F8 00              2430 	lda	hl,0(sp)
   0827 22                 2431 	ld	(hl+),a
   0828 36 00              2432 	ld	(hl),#0x00
                           2433 ;	genCmpLt
                           2434 ;	AOP_STK for _collide_sloc1_1_0
                           2435 ;	AOP_STK for _collide_sloc0_1_0
   082A 2B                 2436 	dec	hl
   082B 2A                 2437 	ld	a,(hl+)
   082C 23                 2438 	inc	hl
   082D 96                 2439 	sub	a,(hl)
   082E 2B                 2440 	dec	hl
   082F 2A                 2441 	ld	a,(hl+)
   0830 23                 2442 	inc	hl
   0831 9E                 2443 	sbc	a,(hl)
   0832 DA 3D 08           2444 	jp	c,00120$
                           2445 ;	bustout.c 262
                           2446 ;	genAssign
                           2447 ;	AOP_HL for _ball_vel_x
   0835 21 13 00           2448 	ld	hl,#_ball_vel_x
   0838 36 FF              2449 	ld	(hl),#0xFF
                           2450 ;	genGoto
   083A C3 4C 08           2451 	jp	00122$
                           2452 ;	genLabel
   083D                    2453 00120$:
                           2454 ;	bustout.c 264
                           2455 ;	genAssign
                           2456 ;	(registers are the same)
                           2457 ;	genCmpGt
                           2458 ;	AOP_STK for _collide_sloc1_1_0
   083D 79                 2459 	ld	a,c
   083E F8 00              2460 	lda	hl,0(sp)
   0840 96                 2461 	sub	a,(hl)
   0841 78                 2462 	ld	a,b
   0842 23                 2463 	inc	hl
   0843 9E                 2464 	sbc	a,(hl)
   0844 DA 4C 08           2465 	jp	c,00122$
                           2466 ;	bustout.c 265
                           2467 ;	genAssign
                           2468 ;	AOP_HL for _ball_vel_x
   0847 21 13 00           2469 	ld	hl,#_ball_vel_x
   084A 36 01              2470 	ld	(hl),#0x01
                           2471 ;	genLabel
   084C                    2472 00122$:
                           2473 ;	genEndFunction
   084C E8 04              2474 	lda	sp,4(sp)
   084E C9                 2475 	ret
   084F                    2476 ___collide_end:
                           2477 ;	bustout.c 269
                           2478 ;	genLabel
                           2479 ;	genFunction
                           2480 ;	---------------------------------
                           2481 ; Function move
                           2482 ; ---------------------------------
   084F                    2483 ___move_start:
   084F                    2484 _move:
                           2485 	
                           2486 ;	bustout.c 272
                           2487 ;	genIpush
                           2488 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2489 ;	AOP_HL for _paddle_y
   084F 21 0E 00           2490 	ld	hl,#_paddle_y
   0852 7E                 2491 	ld	a,(hl)
   0853 F5                 2492 	push	af
   0854 33                 2493 	inc	sp
                           2494 ;	genIpush
                           2495 ;	AOP_HL for _paddle_x
   0855 21 0D 00           2496 	ld	hl,#_paddle_x
   0858 7E                 2497 	ld	a,(hl)
   0859 F5                 2498 	push	af
   085A 33                 2499 	inc	sp
                           2500 ;	genIpush
   085B 3E 00              2501 	ld	a,#0x00
   085D F5                 2502 	push	af
   085E 33                 2503 	inc	sp
                           2504 ;	genCall
   085F CD 00 00           2505 	call	_move_sprite
   0862 E8 03              2506 	lda	sp,3(sp)
                           2507 ;	bustout.c 273
                           2508 ;	genPlus
                           2509 ;	AOP_HL for _paddle_x
                           2510 ;	genPlusIncr
                           2511 ;	Can't optimise plus by inc, falling back to the normal way
   0864 21 0D 00           2512 	ld	hl,#_paddle_x
   0867 7E                 2513 	ld	a,(hl)
   0868 C6 08              2514 	add	a,#0x08
   086A 4F                 2515 	ld	c,a
                           2516 ;	genIpush
                           2517 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2518 ;	AOP_HL for _paddle_y
   086B 21 0E 00           2519 	ld	hl,#_paddle_y
   086E 7E                 2520 	ld	a,(hl)
   086F F5                 2521 	push	af
   0870 33                 2522 	inc	sp
                           2523 ;	genIpush
   0871 79                 2524 	ld	a,c
   0872 F5                 2525 	push	af
   0873 33                 2526 	inc	sp
                           2527 ;	genIpush
   0874 3E 01              2528 	ld	a,#0x01
   0876 F5                 2529 	push	af
   0877 33                 2530 	inc	sp
                           2531 ;	genCall
   0878 CD 00 00           2532 	call	_move_sprite
   087B E8 03              2533 	lda	sp,3(sp)
                           2534 ;	bustout.c 275
                           2535 ;	genIpush
                           2536 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2537 ;	AOP_HL for _ball_y
   087D 21 12 00           2538 	ld	hl,#_ball_y
   0880 7E                 2539 	ld	a,(hl)
   0881 F5                 2540 	push	af
   0882 33                 2541 	inc	sp
                           2542 ;	genIpush
                           2543 ;	AOP_HL for _ball_x
   0883 21 11 00           2544 	ld	hl,#_ball_x
   0886 7E                 2545 	ld	a,(hl)
   0887 F5                 2546 	push	af
   0888 33                 2547 	inc	sp
                           2548 ;	genIpush
   0889 3E 02              2549 	ld	a,#0x02
   088B F5                 2550 	push	af
   088C 33                 2551 	inc	sp
                           2552 ;	genCall
   088D CD 00 00           2553 	call	_move_sprite
   0890 E8 03              2554 	lda	sp,3(sp)
                           2555 ;	bustout.c 276
                           2556 ;	genPlus
                           2557 ;	AOP_HL for _ball_x
                           2558 ;	genPlusIncr
                           2559 ;	Can't optimise plus by inc, falling back to the normal way
   0892 21 11 00           2560 	ld	hl,#_ball_x
   0895 7E                 2561 	ld	a,(hl)
   0896 C6 08              2562 	add	a,#0x08
   0898 4F                 2563 	ld	c,a
                           2564 ;	genIpush
                           2565 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           2566 ;	AOP_HL for _ball_y
   0899 21 12 00           2567 	ld	hl,#_ball_y
   089C 7E                 2568 	ld	a,(hl)
   089D F5                 2569 	push	af
   089E 33                 2570 	inc	sp
                           2571 ;	genIpush
   089F 79                 2572 	ld	a,c
   08A0 F5                 2573 	push	af
   08A1 33                 2574 	inc	sp
                           2575 ;	genIpush
   08A2 3E 03              2576 	ld	a,#0x03
   08A4 F5                 2577 	push	af
   08A5 33                 2578 	inc	sp
                           2579 ;	genCall
   08A6 CD 00 00           2580 	call	_move_sprite
   08A9 E8 03              2581 	lda	sp,3(sp)
                           2582 ;	genLabel
   08AB                    2583 00101$:
                           2584 ;	genEndFunction
                           2585 	
   08AB C9                 2586 	ret
   08AC                    2587 ___move_end:
                           2588 ;	bustout.c 279
                           2589 ;	genLabel
                           2590 ;	genFunction
                           2591 ;	---------------------------------
                           2592 ; Function score
                           2593 ; ---------------------------------
   08AC                    2594 ___score_start:
   08AC                    2595 _score:
                           2596 	
                           2597 ;	bustout.c 281
                           2598 ;	genIfx
                           2599 ;	AOP_HL for _game_over
   08AC 21 0B 00           2600 	ld	hl,#_game_over
   08AF 2A                 2601 	ld	a,(hl+)
   08B0 B6                 2602 	or	a,(hl)
   08B1 CA D0 08           2603 	jp	z,00103$
                           2604 ;	bustout.c 282
                           2605 ;	genCall
                           2606 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08B4 CD 00 00           2607 	call	_set_paddle
                           2608 ;	bustout.c 283
                           2609 ;	genIpush
                           2610 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08B7 21 00 00           2611 	ld	hl,#0x0000
   08BA E5                 2612 	push	hl
                           2613 ;	genCall
   08BB CD DA 01           2614 	call	_set_ball
   08BE E8 02              2615 	lda	sp,2(sp)
                           2616 ;	bustout.c 284
                           2617 ;	genAssign
                           2618 ;	AOP_HL for _game_started
   08C0 21 09 00           2619 	ld	hl,#_game_started
   08C3 36 00              2620 	ld	(hl),#0x00
   08C5 23                 2621 	inc	hl
   08C6 36 00              2622 	ld	(hl),#0x00
                           2623 ;	bustout.c 285
                           2624 ;	genAssign
                           2625 ;	AOP_HL for _game_over
   08C8 21 0B 00           2626 	ld	hl,#_game_over
   08CB 36 00              2627 	ld	(hl),#0x00
   08CD 23                 2628 	inc	hl
   08CE 36 00              2629 	ld	(hl),#0x00
                           2630 ;	genLabel
   08D0                    2631 00103$:
                           2632 ;	genEndFunction
                           2633 	
   08D0 C9                 2634 	ret
   08D1                    2635 ___score_end:
                           2636 ;	bustout.c 289
                           2637 ;	genLabel
                           2638 ;	genFunction
                           2639 ;	---------------------------------
                           2640 ; Function run
                           2641 ; ---------------------------------
   08D1                    2642 ___run_start:
   08D1                    2643 _run:
   08D1 E8 FD              2644 	lda	sp,-3(sp)
                           2645 ;	bustout.c 291
                           2646 ;	genLabel
   08D3                    2647 00104$:
                           2648 ;	bustout.c 292
                           2649 ;	genCall
                           2650 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08D3 CD 00 00           2651 	call	_wait_vbl_done
                           2652 ;	bustout.c 294
                           2653 ;	genCall
                           2654 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08D6 CD 00 00           2655 	call	_joypad
                           2656 ;	AOP_HL for _key
   08D9 21 06 00           2657 	ld	hl,#_key
   08DC 73                 2658 	ld	(hl),e
                           2659 ;	bustout.c 296
                           2660 ;	genCall
                           2661 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08DD CD 3B 06           2662 	call	_input
                           2663 ;	bustout.c 297
                           2664 ;	genIfx
                           2665 ;	AOP_HL for _game_started
   08E0 21 09 00           2666 	ld	hl,#_game_started
   08E3 2A                 2667 	ld	a,(hl+)
   08E4 B6                 2668 	or	a,(hl)
   08E5 CA F4 08           2669 	jp	z,00102$
                           2670 ;	bustout.c 298
                           2671 ;	genCall
                           2672 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08E8 CD F6 06           2673 	call	_physics
                           2674 ;	bustout.c 299
                           2675 ;	genCall
                           2676 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08EB CD 26 07           2677 	call	_collide
                           2678 ;	bustout.c 300
                           2679 ;	genCall
                           2680 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08EE CD 4F 08           2681 	call	_move
                           2682 ;	bustout.c 301
                           2683 ;	genCall
                           2684 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   08F1 CD AC 08           2685 	call	_score
                           2686 ;	genLabel
   08F4                    2687 00102$:
                           2688 ;	bustout.c 304
                           2689 ;	genAssign
   08F4 01 40 FF           2690 	ld	bc,#0xFF40
                           2691 ;	genAssign
                           2692 ;	AOP_STK for _run_sloc0_1_0
   08F7 F8 01              2693 	lda	hl,1(sp)
   08F9 36 40              2694 	ld	(hl),#0x40
   08FB 23                 2695 	inc	hl
   08FC 36 FF              2696 	ld	(hl),#0xFF
                           2697 ;	genPointerGet
                           2698 ;	AOP_STK for _run_sloc0_1_0
                           2699 ;	AOP_STK for _run_sloc1_1_0
   08FE 2B                 2700 	dec	hl
   08FF 5E                 2701 	ld	e,(hl)
   0900 23                 2702 	inc	hl
   0901 56                 2703 	ld	d,(hl)
   0902 1A                 2704 	ld	a,(de)
   0903 2B                 2705 	dec	hl
   0904 2B                 2706 	dec	hl
                           2707 ;	genOr
                           2708 ;	AOP_STK for _run_sloc1_1_0
   0905 77                 2709 	ld      (hl),a
                           2710 ; Removed redundent load
   0906 F6 02              2711 	or	a,#0x02
                           2712 ;	genAssign (pointer)
   0908 02                 2713 	ld	(bc),a
                           2714 ;	genGoto
   0909 C3 D3 08           2715 	jp	00104$
                           2716 ;	genLabel
   090C                    2717 00106$:
                           2718 ;	genEndFunction
   090C E8 03              2719 	lda	sp,3(sp)
   090E C9                 2720 	ret
   090F                    2721 ___run_end:
                           2722 ;	bustout.c 308
                           2723 ;	genLabel
                           2724 ;	genFunction
                           2725 ;	---------------------------------
                           2726 ; Function main
                           2727 ; ---------------------------------
   090F                    2728 ___main_start:
   090F                    2729 _main:
   090F E8 FD              2730 	lda	sp,-3(sp)
                           2731 ;	bustout.c 310
                           2732 ;	genAssign
   0911 01 40 FF           2733 	ld	bc,#0xFF40
                           2734 ;	genAssign
                           2735 ;	AOP_STK for _main_sloc0_1_0
   0914 F8 01              2736 	lda	hl,1(sp)
   0916 36 40              2737 	ld	(hl),#0x40
   0918 23                 2738 	inc	hl
   0919 36 FF              2739 	ld	(hl),#0xFF
                           2740 ;	genPointerGet
                           2741 ;	AOP_STK for _main_sloc0_1_0
                           2742 ;	AOP_STK for _main_sloc1_1_0
   091B 2B                 2743 	dec	hl
   091C 5E                 2744 	ld	e,(hl)
   091D 23                 2745 	inc	hl
   091E 56                 2746 	ld	d,(hl)
   091F 1A                 2747 	ld	a,(de)
   0920 2B                 2748 	dec	hl
   0921 2B                 2749 	dec	hl
                           2750 ;	genOr
                           2751 ;	AOP_STK for _main_sloc1_1_0
   0922 77                 2752 	ld      (hl),a
   0923 7F                 2753 	ld      a,a
   0924 F6 04              2754 	or	a,#0x04
                           2755 ;	genAssign (pointer)
   0926 02                 2756 	ld	(bc),a
                           2757 ;	bustout.c 312
                           2758 ;	genCall
                           2759 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0927 CD 00 00           2760 	call	_set_paddle
                           2761 ;	bustout.c 313
                           2762 ;	genIpush
                           2763 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   092A 21 01 00           2764 	ld	hl,#0x0001
   092D E5                 2765 	push	hl
                           2766 ;	genCall
   092E CD DA 01           2767 	call	_set_ball
   0931 E8 02              2768 	lda	sp,2(sp)
                           2769 ;	bustout.c 314
                           2770 ;	genCall
                           2771 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0933 CD 89 02           2772 	call	_set_lives
                           2773 ;	bustout.c 315
                           2774 ;	genCall
                           2775 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0936 CD 54 04           2776 	call	_set_blocks
                           2777 ;	bustout.c 316
                           2778 ;	genCall
                           2779 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0939 CD D1 08           2780 	call	_run
                           2781 ;	genLabel
   093C                    2782 00101$:
                           2783 ;	genEndFunction
   093C E8 03              2784 	lda	sp,3(sp)
   093E C9                 2785 	ret
   093F                    2786 ___main_end:
                           2787 	.area _CODE
ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 1.

Symbol Table

  0 _INITIAL_LIVES                     01CC GR
  1 _SCREEN_HEIGHT                     0002 GR
  1 _SCREEN_WIDTH                      0000 GR
  1 _SPRITE_SIZE                       0004 GR
  0 ___collide_end                     084F R
  0 ___collide_start                   0726 R
  0 ___input_end                       06F6 R
  0 ___input_start                     063B R
  0 ___main_end                        093F R
  0 ___main_start                      090F R
  0 ___move_end                        08AC R
  0 ___move_start                      084F R
  0 ___physics_end                     0726 R
  0 ___physics_start                   06F6 R
  0 ___run_end                         090F R
  0 ___run_start                       08D1 R
  0 ___score_end                       08D1 R
  0 ___score_start                     08AC R
  0 ___set_ball_end                    0289 R
  0 ___set_ball_start                  01DA R
  0 ___set_blocks_end                  063B R
  0 ___set_blocks_start                0454 R
  0 ___set_lives_end                   0454 R
  0 ___set_lives_start                 0289 R
  0 ___set_paddle_end                  008C R
  0 ___set_paddle_start                0000 R
  0 _ball_sprite_data                  00CC GR
  0 _ball_sprite_left                  01D4 GR
  0 _ball_sprite_right                 01D6 GR
  1 _ball_vel_x                        0013 GR
  1 _ball_vel_y                        0014 GR
  1 _ball_x                            0011 GR
  1 _ball_y                            0012 GR
  0 _block_sprite_data                 018C GR
  1 _blocks                            0015 GR
  0 _collide                           0726 GR
  0 _death_sprite_data                 014C GR
  1 _game_over                         000B GR
  1 _game_started                      0009 GR
  0 _input                             063B GR
    _joypad                            **** GX
  1 _key                               0006 GR
  1 _lives                             0007 GR
  0 _lives_sprite_begin                01D8 GR
  0 _main                              090F GR
  0 _move                              084F GR
    _move_sprite                       **** GX
  0 _paddle_speed                      01D2 GR
  0 _paddle_sprite_data                008C GR
  0 _paddle_sprite_left                01CE GR
  0 _paddle_sprite_right               01D0 GR
  1 _paddle_vel_x                      000F GR
  1 _paddle_vel_y                      0010 GR
  1 _paddle_x                          000D GR
  1 _paddle_y                          000E GR
  0 _physics                           06F6 GR
  0 _run                               08D1 GR
  0 _score                             08AC GR
  0 _set_ball                          01DA GR
  0 _set_blocks                        0454 GR
  0 _set_lives                         0289 GR
  0 _set_paddle                        0000 GR
    _set_sprite_data                   **** GX
    _set_sprite_tile                   **** GX
  0 _smile_sprite_data                 010C GR
    _wait_vbl_done                     **** GX

ASxxxx Assembler V01.75  (GameBoy Z80-like CPU), page 2.

Area Table

   0 _CODE                              size  93F   flags 0
   1 _DATA                              size   45   flags 0
   2 _OVERLAY                           size    0   flags 0
   3 _ISEG                              size    0   flags 0
   4 _BSEG                              size    0   flags 0
   5 _XSEG                              size    0   flags 0
   6 _GSINIT                            size   32   flags 0
   7 _GSFINAL                           size    0   flags 0
   8 _HOME                              size    0   flags 0
