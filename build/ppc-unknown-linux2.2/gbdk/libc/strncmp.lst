                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Mon Jan 15 17:17:38 2018
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module strncmp
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strncmp
                             12 ;--------------------------------------------------------
                             13 ; special function registers
                             14 ;--------------------------------------------------------
                             15 ;--------------------------------------------------------
                             16 ; special function bits 
                             17 ;--------------------------------------------------------
                             18 ;--------------------------------------------------------
                             19 ; internal ram data
                             20 ;--------------------------------------------------------
                             21 	.area _DATA
                             22 ;--------------------------------------------------------
                             23 ; overlayable items in internal ram 
                             24 ;--------------------------------------------------------
                             25 	.area _OVERLAY
                             26 ;--------------------------------------------------------
                             27 ; indirectly addressable internal ram data
                             28 ;--------------------------------------------------------
                             29 	.area _ISEG
                             30 ;--------------------------------------------------------
                             31 ; bit data
                             32 ;--------------------------------------------------------
                             33 	.area _BSEG
                             34 ;--------------------------------------------------------
                             35 ; external ram data
                             36 ;--------------------------------------------------------
                             37 	.area _XSEG
                             38 ;--------------------------------------------------------
                             39 ; global & static initialisations
                             40 ;--------------------------------------------------------
                             41 	.area _GSINIT
                             42 	.area _GSFINAL
                             43 	.area _GSINIT
                             44 ;--------------------------------------------------------
                             45 ; Home
                             46 ;--------------------------------------------------------
                             47 	.area _HOME
                             48 ;	strncmp.c 10
                             49 ;	genLabel
                             50 ;	genFunction
                             51 ;	---------------------------------
                             52 ; Function strncmp
                             53 ; ---------------------------------
   0000                      54 ___strncmp_start:
   0000                      55 _strncmp:
   0000 E8 FC                56 	lda	sp,-4(sp)
                             57 ;	strncmp.c 12
                             58 ;	genAssign
                             59 ;	(operands are equal 3)
                             60 ;	genAssign
                             61 ;	(operands are equal 3)
                             62 ;	genAssign
                             63 ;	(operands are equal 3)
                             64 ;	genLabel
   0002                      65 00104$:
                             66 ;	genCmpGt
                             67 ;	AOP_STK for 
   0002 1E 80                68 	ld	e,#0x80
   0004 F8 0B                69 	lda	hl,11(sp)
   0006 7E                   70 	ld	a,(hl)
   0007 EE 80                71 	xor	a,#0x80
   0009 57                   72 	ld	d,a
   000A 3E 00                73 	ld	a,#0x00
   000C 2B                   74 	dec	hl
   000D 96                   75 	sub	a,(hl)
   000E 7B                   76 	ld	a,e
   000F 9A                   77 	sbc	a,d
   0010 D2r54s00             78 	jp	nc,00106$
                             79 ;	genPointerGet
                             80 ;	AOP_STK for 
   0013 F8 06                81 	lda	hl,6(sp)
   0015 5E                   82 	ld	e,(hl)
   0016 23                   83 	inc	hl
   0017 56                   84 	ld	d,(hl)
   0018 1A                   85 	ld	a,(de)
   0019 4F                   86 	ld	c,a
                             87 ;	genPointerGet
                             88 ;	AOP_STK for 
   001A 23                   89 	inc	hl
   001B 5E                   90 	ld	e,(hl)
   001C 23                   91 	inc	hl
   001D 56                   92 	ld	d,(hl)
   001E 1A                   93 	ld	a,(de)
   001F 47                   94 	ld	b,a
                             95 ;	genPlus
                             96 ;	AOP_STK for 
                             97 ;	genPlusIncr
   0020 2B                   98 	dec	hl
   0021 34                   99 	inc	(hl)
   0022 20 02               100 	jr	nz,00116$
   0024 23                  101 	inc	hl
   0025 34                  102 	inc	(hl)
   0026                     103 00116$:
                            104 ;	genAssign
                            105 ;	(operands are equal 4)
                            106 ;	genCmpEq
                            107 ; genCmpEq: left 1, right 1, result 0
   0026 79                  108 	ld	a,c
   0027 B8                  109 	cp	b
   0028 C2r54s00            110 	jp	nz,00106$
   002B 18 03               111 	jr	00118$
   002D                     112 00117$:
   002D C3r54s00            113 	jp	00106$
   0030                     114 00118$:
                            115 ;	strncmp.c 13
                            116 ;	genPlus
                            117 ;	AOP_STK for 
                            118 ;	genPlusIncr
   0030 F8 06               119 	lda	hl,6(sp)
   0032 34                  120 	inc	(hl)
   0033 20 02               121 	jr	nz,00119$
   0035 23                  122 	inc	hl
   0036 34                  123 	inc	(hl)
   0037                     124 00119$:
                            125 ;	genAssign
                            126 ;	(operands are equal 4)
                            127 ;	genCmpEq
                            128 ; genCmpEq: left 1, right 1, result 0
   0037 79                  129 	ld	a,c
   0038 B7                  130 	or	a,a
   0039 C2r47s00            131 	jp	nz,00102$
   003C 18 03               132 	jr	00121$
   003E                     133 00120$:
   003E C3r47s00            134 	jp	00102$
   0041                     135 00121$:
                            136 ;	strncmp.c 14
                            137 ;	genRet
   0041 11 00 00            138 	ld	de,#0x0000
   0044 C3r99s00            139 	jp	00107$
                            140 ;	genLabel
   0047                     141 00102$:
                            142 ;	strncmp.c 15
                            143 ;	genMinus
                            144 ;	AOP_STK for 
   0047 F8 0A               145 	lda	hl,10(sp)
   0049 5E                  146 	ld	e,(hl)
   004A 23                  147 	inc	hl
   004B 56                  148 	ld	d,(hl)
   004C 1B                  149 	dec	de
   004D 2B                  150 	dec	hl
   004E 73                  151 	ld	(hl),e
   004F 23                  152 	inc	hl
   0050 72                  153 	ld	(hl),d
                            154 ;	genAssign
                            155 ;	(operands are equal 4)
                            156 ;	genGoto
   0051 C3r02s00            157 	jp	00104$
                            158 ;	genLabel
   0054                     159 00106$:
                            160 ;	strncmp.c 17
                            161 ;	genCmpEq
                            162 ;	AOP_STK for 
                            163 ; genCmpEq: left 2, right 2, result 0
   0054 F8 0A               164 	lda	hl,10(sp)
   0056 2A                  165 	ld	a,(hl+)
   0057 B6                  166 	or	a,(hl)
   0058 C2r67s00            167 	jp	nz,00109$
   005B 18 03               168 	jr	00123$
   005D                     169 00122$:
   005D C3r67s00            170 	jp	00109$
   0060                     171 00123$:
                            172 ;	genAssign
                            173 ;	AOP_STK for _strncmp_sloc2_1_0
   0060 F8 00               174 	lda	hl,0(sp)
   0062 36 00               175 	ld	(hl),#0x00
                            176 ;	genGoto
   0064 C3r90s00            177 	jp	00110$
                            178 ;	genLabel
   0067                     179 00109$:
                            180 ;	genAssign
                            181 ;	AOP_STK for 
                            182 ;	AOP_STK for _strncmp_sloc0_1_0
   0067 F8 06               183 	lda	hl,6(sp)
   0069 2A                  184 	ld	a,(hl+)
   006A 5E                  185 	ld	e,(hl)
   006B F8 02               186 	lda	hl,2(sp)
   006D 22                  187 	ld	(hl+),a
   006E 73                  188 	ld	(hl),e
                            189 ;	genPointerGet
                            190 ;	AOP_STK for _strncmp_sloc0_1_0
                            191 ;	AOP_STK for _strncmp_sloc1_1_0
   006F 2B                  192 	dec	hl
   0070 5E                  193 	ld	e,(hl)
   0071 23                  194 	inc	hl
   0072 56                  195 	ld	d,(hl)
   0073 1A                  196 	ld	a,(de)
   0074 2B                  197 	dec	hl
   0075 2B                  198 	dec	hl
   0076 77                  199 	ld	(hl),a
                            200 ;	genMinus
                            201 ;	AOP_STK for 
   0077 F8 08               202 	lda	hl,8(sp)
   0079 5E                  203 	ld	e,(hl)
   007A 23                  204 	inc	hl
   007B 56                  205 	ld	d,(hl)
   007C 21 01 00            206 	ld	hl,#0x0001
   007F 7B                  207 	ld	a,e
   0080 95                  208 	sub	a,l
   0081 5F                  209 	ld	e,a
   0082 7A                  210 	ld	a,d
   0083 9C                  211 	sbc	a,h
   0084 4F                  212 	ld	c,a
   0085 43                  213 	ld	b,e
                            214 ;	genPointerGet
   0086 58                  215 	ld	e,b
   0087 51                  216 	ld	d,c
   0088 1A                  217 	ld	a,(de)
   0089 47                  218 	ld	b,a
                            219 ;	genMinus
                            220 ;	AOP_STK for _strncmp_sloc1_1_0
                            221 ;	AOP_STK for _strncmp_sloc2_1_0
   008A F8 01               222 	lda	hl,1(sp)
   008C 7E                  223 	ld	a,(hl)
   008D 90                  224 	sub	a,b
   008E 2B                  225 	dec	hl
   008F 77                  226 	ld	(hl),a
                            227 ;	genLabel
   0090                     228 00110$:
                            229 ;	genCast
                            230 ;	AOP_STK for _strncmp_sloc2_1_0
   0090 F8 00               231 	lda	hl,0(sp)
   0092 4E                  232 	ld	c,(hl)
   0093 7E                  233 	ld	a,(hl)
   0094 17                  234 	rla	
   0095 9F                  235 	sbc	a,a
   0096 47                  236 	ld	b,a
                            237 ;	genRet
   0097 59                  238 	ld	e,c
   0098 50                  239 	ld	d,b
                            240 ;	genLabel
   0099                     241 00107$:
                            242 ;	genEndFunction
   0099 E8 04               243 	lda	sp,4(sp)
   009B C9                  244 	ret
   009C                     245 ___strncmp_end:
                            246 	.area _CODE
                            247 ;--------------------------------------------------------
                            248 ; code
                            249 ;--------------------------------------------------------
                            250 	.area _CODE
                            251 	.area _CODE
