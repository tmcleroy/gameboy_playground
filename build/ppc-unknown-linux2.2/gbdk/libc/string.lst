                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.3.1 Mon Jan 15 17:17:38 2018
                              4 
                              5 ;--------------------------------------------------------
                              6 	.module string
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _strcpy
                             12 	.globl _memcpy
                             13 	.globl _strcmp
                             14 ;--------------------------------------------------------
                             15 ; special function registers
                             16 ;--------------------------------------------------------
                             17 ;--------------------------------------------------------
                             18 ; special function bits 
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; internal ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
                             24 ;--------------------------------------------------------
                             25 ; overlayable items in internal ram 
                             26 ;--------------------------------------------------------
                             27 	.area _OVERLAY
                             28 ;--------------------------------------------------------
                             29 ; indirectly addressable internal ram data
                             30 ;--------------------------------------------------------
                             31 	.area _ISEG
                             32 ;--------------------------------------------------------
                             33 ; bit data
                             34 ;--------------------------------------------------------
                             35 	.area _BSEG
                             36 ;--------------------------------------------------------
                             37 ; external ram data
                             38 ;--------------------------------------------------------
                             39 	.area _XSEG
                             40 ;--------------------------------------------------------
                             41 ; global & static initialisations
                             42 ;--------------------------------------------------------
                             43 	.area _GSINIT
                             44 	.area _GSFINAL
                             45 	.area _GSINIT
                             46 ;--------------------------------------------------------
                             47 ; Home
                             48 ;--------------------------------------------------------
                             49 	.area _HOME
                             50 ;	string.c 7
                             51 ;	genLabel
                             52 ;	genFunction
                             53 ;	---------------------------------
                             54 ; Function strcpy
                             55 ; ---------------------------------
   0000                      56 ___strcpy_start:
   0000                      57 _strcpy:
   0000 E8 FC                58 	lda	sp,-4(sp)
                             59 ;	string.c 9
                             60 ;	genAssign
                             61 ;	AOP_STK for 
                             62 ;	AOP_STK for _strcpy_d_1_1
   0002 F8 06                63 	lda	hl,6(sp)
   0004 2A                   64 	ld	a,(hl+)
   0005 5E                   65 	ld	e,(hl)
   0006 F8 02                66 	lda	hl,2(sp)
   0008 22                   67 	ld	(hl+),a
   0009 73                   68 	ld	(hl),e
                             69 ;	string.c 10
                             70 ;	genAssign
                             71 ;	AOP_STK for 
                             72 ;	AOP_STK for _strcpy_s_1_1
   000A F8 08                73 	lda	hl,8(sp)
   000C 2A                   74 	ld	a,(hl+)
   000D 5E                   75 	ld	e,(hl)
   000E F8 00                76 	lda	hl,0(sp)
   0010 22                   77 	ld	(hl+),a
   0011 73                   78 	ld	(hl),e
                             79 ;	string.c 11
                             80 ;	genAssign
                             81 ;	AOP_STK for _strcpy_d_1_1
                             82 ;	(registers are the same)
                             83 ;	genAssign
                             84 ;	AOP_STK for _strcpy_s_1_1
   0012 2B                   85 	dec	hl
   0013 4E                   86 	ld	c,(hl)
   0014 23                   87 	inc	hl
   0015 46                   88 	ld	b,(hl)
                             89 ;	genLabel
   0016                      90 00101$:
                             91 ;	genPointerGet
   0016 0A                   92 	ld	a,(bc)
                             93 ;	genAssign (pointer)
                             94 ;	AOP_STK for _strcpy_d_1_1
   0017 F8 02                95 	lda	hl,2(sp)
   0019 5E                   96 	ld	e,(hl)
   001A 23                   97 	inc	hl
   001B 56                   98 	ld	d,(hl)
   001C 12                   99 	ld	(de),a
                            100 ;	genIfx
   001D B7                  101 	or	a,a
   001E CAr2Bs00            102 	jp	z,00103$
                            103 ;	string.c 12
                            104 ;	genPlus
                            105 ;	AOP_STK for _strcpy_d_1_1
                            106 ;	genPlusIncr
   0021 2B                  107 	dec	hl
   0022 34                  108 	inc	(hl)
   0023 20 02               109 	jr	nz,00108$
   0025 23                  110 	inc	hl
   0026 34                  111 	inc	(hl)
   0027                     112 00108$:
                            113 ;	genPlus
                            114 ;	genPlusIncr
   0027 03                  115 	inc	bc
                            116 ;	genGoto
   0028 C3r16s00            117 	jp	00101$
                            118 ;	genLabel
   002B                     119 00103$:
                            120 ;	string.c 13
                            121 ;	genRet
                            122 ;	AOP_STK for 
   002B F8 06               123 	lda	hl,6(sp)
   002D 5E                  124 	ld	e,(hl)
   002E 23                  125 	inc	hl
   002F 56                  126 	ld	d,(hl)
                            127 ;	genLabel
   0030                     128 00104$:
                            129 ;	genEndFunction
   0030 E8 04               130 	lda	sp,4(sp)
   0032 C9                  131 	ret
   0033                     132 ___strcpy_end:
                            133 ;	string.c 18
                            134 ;	genLabel
                            135 ;	genFunction
                            136 ;	---------------------------------
                            137 ; Function memcpy
                            138 ; ---------------------------------
   0033                     139 ___memcpy_start:
   0033                     140 _memcpy:
   0033 E8 FA               141 	lda	sp,-6(sp)
                            142 ;	string.c 20
                            143 ;	genAssign
                            144 ;	(operands are equal 3)
                            145 ;	string.c 21
                            146 ;	genAssign
                            147 ;	(operands are equal 3)
                            148 ;	string.c 22
                            149 ;	genAssign
                            150 ;	AOP_STK for 
                            151 ;	AOP_STK for _memcpy_d_1_1
   0035 F8 08               152 	lda	hl,8(sp)
   0037 2A                  153 	ld	a,(hl+)
   0038 5E                  154 	ld	e,(hl)
   0039 F8 04               155 	lda	hl,4(sp)
   003B 22                  156 	ld	(hl+),a
   003C 73                  157 	ld	(hl),e
                            158 ;	genAssign
                            159 ;	AOP_STK for 
                            160 ;	AOP_STK for _memcpy_s_1_1
   003D F8 0A               161 	lda	hl,10(sp)
   003F 2A                  162 	ld	a,(hl+)
   0040 5E                  163 	ld	e,(hl)
   0041 F8 02               164 	lda	hl,2(sp)
   0043 22                  165 	ld	(hl+),a
   0044 73                  166 	ld	(hl),e
                            167 ;	genAssign
                            168 ;	AOP_STK for 
   0045 F8 0C               169 	lda	hl,12(sp)
   0047 4E                  170 	ld	c,(hl)
   0048 23                  171 	inc	hl
   0049 46                  172 	ld	b,(hl)
                            173 ;	genLabel
   004A                     174 00101$:
                            175 ;	genAssign
                            176 ;	AOP_STK for _memcpy_sloc0_1_0
   004A F8 00               177 	lda	hl,0(sp)
   004C 71                  178 	ld	(hl),c
   004D 23                  179 	inc	hl
   004E 70                  180 	ld	(hl),b
                            181 ;	genMinus
   004F 0B                  182 	dec	bc
                            183 ;	genIfx
                            184 ;	AOP_STK for _memcpy_sloc0_1_0
   0050 2B                  185 	dec	hl
   0051 2A                  186 	ld	a,(hl+)
   0052 B6                  187 	or	a,(hl)
   0053 CAr70s00            188 	jp	z,00103$
                            189 ;	string.c 23
                            190 ;	genPointerGet
                            191 ;	AOP_STK for _memcpy_s_1_1
   0056 23                  192 	inc	hl
   0057 5E                  193 	ld	e,(hl)
   0058 23                  194 	inc	hl
   0059 56                  195 	ld	d,(hl)
   005A 1A                  196 	ld	a,(de)
                            197 ;	genAssign (pointer)
                            198 ;	AOP_STK for _memcpy_d_1_1
   005B 23                  199 	inc	hl
   005C 5E                  200 	ld	e,(hl)
   005D 23                  201 	inc	hl
   005E 56                  202 	ld	d,(hl)
   005F 12                  203 	ld	(de),a
                            204 ;	string.c 24
                            205 ;	genPlus
                            206 ;	AOP_STK for _memcpy_d_1_1
                            207 ;	genPlusIncr
   0060 2B                  208 	dec	hl
   0061 34                  209 	inc	(hl)
   0062 20 02               210 	jr	nz,00108$
   0064 23                  211 	inc	hl
   0065 34                  212 	inc	(hl)
   0066                     213 00108$:
                            214 ;	string.c 25
                            215 ;	genPlus
                            216 ;	AOP_STK for _memcpy_s_1_1
                            217 ;	genPlusIncr
   0066 F8 02               218 	lda	hl,2(sp)
   0068 34                  219 	inc	(hl)
   0069 20 02               220 	jr	nz,00109$
   006B 23                  221 	inc	hl
   006C 34                  222 	inc	(hl)
   006D                     223 00109$:
                            224 ;	genGoto
   006D C3r4As00            225 	jp	00101$
                            226 ;	genLabel
   0070                     227 00103$:
                            228 ;	string.c 27
                            229 ;	genRet
                            230 ;	AOP_STK for 
   0070 F8 08               231 	lda	hl,8(sp)
   0072 5E                  232 	ld	e,(hl)
   0073 23                  233 	inc	hl
   0074 56                  234 	ld	d,(hl)
                            235 ;	genLabel
   0075                     236 00104$:
                            237 ;	genEndFunction
   0075 E8 06               238 	lda	sp,6(sp)
   0077 C9                  239 	ret
   0078                     240 ___memcpy_end:
                            241 ;	string.c 32
                            242 ;	genLabel
                            243 ;	genFunction
                            244 ;	---------------------------------
                            245 ; Function strcmp
                            246 ; ---------------------------------
   0078                     247 ___strcmp_start:
   0078                     248 _strcmp:
   0078 E8 FF               249 	lda	sp,-1(sp)
                            250 ;	string.c 36
                            251 ;	genAssign
                            252 ;	(operands are equal 3)
                            253 ;	genAssign
                            254 ;	(operands are equal 3)
                            255 ;	genLabel
   007A                     256 00102$:
                            257 ;	genPointerGet
                            258 ;	AOP_STK for 
   007A F8 03               259 	lda	hl,3(sp)
   007C 5E                  260 	ld	e,(hl)
   007D 23                  261 	inc	hl
   007E 56                  262 	ld	d,(hl)
   007F 1A                  263 	ld	a,(de)
   0080 4F                  264 	ld	c,a
                            265 ;	genPointerGet
                            266 ;	AOP_STK for 
   0081 23                  267 	inc	hl
   0082 5E                  268 	ld	e,(hl)
   0083 23                  269 	inc	hl
   0084 56                  270 	ld	d,(hl)
   0085 1A                  271 	ld	a,(de)
   0086 47                  272 	ld	b,a
                            273 ;	genMinus
   0087 79                  274 	ld	a,c
   0088 90                  275 	sub	a,b
   0089 4F                  276 	ld	c,a
                            277 ;	genAssign
                            278 ;	AOP_STK for _strcmp_ret_1_1
   008A F8 00               279 	lda	hl,0(sp)
   008C 71                  280 	ld	(hl),c
                            281 ;	genIfx
                            282 ;	genIfx
   008D AF                  283 	xor	a,a
   008E B1                  284 	or	a,c
   008F C2rA7s00            285 	jp	nz,00104$
   0092 B0                  286 	or	a,b
   0093 CArA7s00            287 	jp	z,00104$
                            288 ;	string.c 37
                            289 ;	genPlus
                            290 ;	AOP_STK for 
                            291 ;	genPlusIncr
   0096 F8 03               292 	lda	hl,3(sp)
   0098 34                  293 	inc	(hl)
   0099 20 02               294 	jr	nz,00117$
   009B 23                  295 	inc	hl
   009C 34                  296 	inc	(hl)
   009D                     297 00117$:
                            298 ;	genPlus
                            299 ;	AOP_STK for 
                            300 ;	genPlusIncr
   009D F8 05               301 	lda	hl,5(sp)
   009F 34                  302 	inc	(hl)
   00A0 20 02               303 	jr	nz,00118$
   00A2 23                  304 	inc	hl
   00A3 34                  305 	inc	(hl)
   00A4                     306 00118$:
                            307 ;	genGoto
   00A4 C3r7As00            308 	jp	00102$
                            309 ;	genLabel
   00A7                     310 00104$:
                            311 ;	string.c 39
                            312 ;	genCmpLt
                            313 ;	AOP_STK for _strcmp_ret_1_1
   00A7 F8 00               314 	lda	hl,0(sp)
   00A9 7E                  315 	ld	a,(hl)
   00AA EE 80               316 	xor	a,#0x80
   00AC FE 80               317 	cp	#0x00^0x80
   00AE D2rB7s00            318 	jp	nc,00108$
                            319 ;	string.c 40
                            320 ;	genRet
   00B1 11 FF FF            321 	ld	de,#0xFFFFFFFF
   00B4 C3rCDs00            322 	jp	00110$
                            323 ;	genLabel
   00B7                     324 00108$:
                            325 ;	string.c 41
                            326 ;	genCmpGt
                            327 ;	AOP_STK for _strcmp_ret_1_1
   00B7 1E 80               328 	ld	e,#0x80
   00B9 F8 00               329 	lda	hl,0(sp)
   00BB 7E                  330 	ld	a,(hl)
   00BC EE 80               331 	xor	a,#0x80
   00BE 57                  332 	ld	d,a
   00BF 7B                  333 	ld	a,e
   00C0 92                  334 	sub	a,d
   00C1 D2rCAs00            335 	jp	nc,00109$
                            336 ;	string.c 42
                            337 ;	genRet
   00C4 11 01 00            338 	ld	de,#0x0001
   00C7 C3rCDs00            339 	jp	00110$
                            340 ;	genLabel
   00CA                     341 00109$:
                            342 ;	string.c 43
                            343 ;	genRet
   00CA 11 00 00            344 	ld	de,#0x0000
                            345 ;	genLabel
   00CD                     346 00110$:
                            347 ;	genEndFunction
   00CD E8 01               348 	lda	sp,1(sp)
   00CF C9                  349 	ret
   00D0                     350 ___strcmp_end:
                            351 	.area _CODE
                            352 ;--------------------------------------------------------
                            353 ; code
                            354 ;--------------------------------------------------------
                            355 	.area _CODE
                            356 	.area _CODE
